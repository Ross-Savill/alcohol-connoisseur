{"version":3,"sources":["MapFolder/RegionDataTable.js","MapFolder/DrinkerDataTable.js","MapFolder/WorldMap.js","MapFolder/USStateList.js","MapFolder/USMap.js","Navbar.js","Table.js","AddDrinkForm.js","HomePage.js","RatingWord.js","DrinkerFolder/RadarChart.js","DrinkerFolder/DrinkersTable.js","DrinkerFolder/Drinkers.js","AuthFolder/LoginButton.js","AuthFolder/LogoutButton.js","App.js","serviceWorker.js","index.js"],"names":["RegionDataTable","props","state","regionCode","regionName","chosenMap","drinks","prevProps","prevState","this","setState","className","selectedDrinks","filter","drink","country","map","push","ukUsa","firstUkUsa","secondUkUsa","sort","a","b","name","index","mixerTwo","key","drinkMain","mixerOne","drinkType","ratingWordOne","ratingWordTwo","score","brand","company","colSpan","renderClickedCountryHeader","renderClickedCountryData","Component","DrinkerDataTable","selectedDrinksPerDrinker","uniqueDrinkerNames","Set","drinksPerPerson","averageScoresArray","drinksCounter","drinkerScores","averageScores","drinkerArray","reduce","length","toFixed","drinksNumber","averageScore","drinkObj","renderClickedDrinkerHeader","renderClickedDrinkerData","require","getName","getCode","WorldMap","getData","handleRegionClick","e","stateCode","refs","$mapObject","tip","hide","fullRegionName","selectedRegion","haveDrinks","drinkers","countryData","secondCollabCountry","firstCollabCountry","countedUniqueCountries","occ","worldMapData","ref","backgroundColor","zoomOnScroll","containerStyle","width","height","onRegionClick","containerClassName","regionStyle","initial","fill","stroke","hover","cursor","selected","selectedHover","regionsSelectable","series","regions","values","scale","normalizeFunction","USStateList","USMap","usStateData","countedUniqueUSStates","usMapData","Object","entries","Navbar","useState","isOpen","isFetching","drinkData","setDrinkData","drinkerData","setDrinkerData","useEffect","axios","get","response","data","console","log","fetchDrinks","fetchDrinkers","role","aria-label","activeClassName","to","Table","columns","filterInput","setFilterInput","useTable","initialState","pageSize","useFilters","useSortBy","usePagination","useBlockLayout","getTableProps","getTableBodyProps","headerGroups","page","gotoPage","nextPage","previousPage","pageOptions","pageCount","canPreviousPage","canNextPage","setPageSize","prepareRow","setFilter","pageIndex","value","onChange","target","undefined","placeholder","onClick","disabled","Number","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","render","row","i","getRowProps","cells","cell","getCellProps","showForm","peopleNames","drinkTypes","personName","mainDrink","brandBrewery","abv","hasMixer","hasCollab","collabOne","collabTwo","notes","filteredOptions","showMainOptions","showBrandOptions","userInput","Dates","date","newDate","Date","getDate","getMonth","getFullYear","toString","substr","HomePage","setData","useMemo","Header","accessor","Cell","parseFloat","d","mixerSix","mixerThree","mixerFour","mixerFive","secondCollabCompany","firstCollabCompany","RatingWord","searchWord","event","enteredLetters","wordSearch","handleChartChange","currentStatePie","chartTypePie","currentStateBar","chartTypeBar","allRatingWords","sortedUniqueWords","clickedWord","clickedName","clickedWordDrinks","wordPieChartData","whoSaidIt","allWords","setAllWordsState","countedUniqueWords","word","toLowerCase","includes","setChartData","drinkInfo","countedUniqueDrinkers","useableDrinkerData","sortedDrinkerData","drinkerNames","chartData","labels","datasets","label","borderWidth","borderColor","hoverBorderWidth","hoverBackgroundColor","numOfDrinks","renderClickedWordDrinks","_id","document","body","scrollTop","documentElement","onElementsClick","element","_index","options","events","onHover","chartElement","style","title","display","text","fontSize","legend","position","plugins","args","fontColor","textMargin","scales","yAxes","ticks","beginAtZero","stepSize","type","renderWordHeader","renderWordData","renderClickedWordData","renderClickedWordsDrinksHeader","resetDrinkerName","RadarChart","selectedDrinker","radarColor","barColor","allDrinkTypes","drinkTypeCount","typeObj","drinksFromDrinkType","drinkCountPerType","array","drinkerRadarData","showRadar","currentStateRadar","showBar","currentPropDrinks","currentPropDrinkers","currentPropDrinkTypes","currentSelectedDrinker","z","callback","isInteger","pointLabels","layout","padding","top","renderDrinkerChart","DrinkersTable","regularDrinkers","irregularDrinkers","drinkerObjectsArray","direction","onSort","allDrinkersArrays","drinker","oneDrinkerArray","aDrinkArray","drinkerName","self","indexOf","allDrinksDates","drinkDate","weeksParticipated","size","drinksAvg","allDrinkStrengths","averageDrinkStrength","allDrinkerDrinkTypes","favouriteDrinkType","frequency","maxType","allDrinkerScores","highestScore","Math","max","lowestScore","min","prevScore","currScore","averageScoreFunc","percentOfTotal","drinkerObject","drinksNum","drinkerWeeks","drinkerAvgConsume","drinkerAvgStrength","drinkerFaveType","drinkerHighScore","drinkerLowScore","drinkerAvgScore","drinkerDrinkPercentage","totalWeeks","thisDrinkDate","oneDrinkDate","totalWeeksNumber","dataObject","dataSortedByName","firstText","toUpperCase","secondText","reverse","sortedNameData","dataSortedByDrinkType","sortedDrinkTypeData","dataSortedByNumbers","firstNum","secondNum","sortedNumberColumn","renderDrinkerHeader","renderDrinkerData","Drinkers","acc","o","person","localeCompare","onSelectDrinker","bind","LoginButton","loginWithRedirect","useAuth0","LogoutButton","logout","App","requestDrinkers","requestDrinks","requestDrinkTypes","all","then","resp","catch","error","auth0","user","exact","path","withAuth0","Boolean","window","location","hostname","match","ReactDOM","domain","process","clientId","redirectUri","origin","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"0hBAqHeA,G,yDAjHb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACCC,MAAQ,CACXC,WAAY,KACZC,WAAY,KACZC,UAAW,KACXC,OAAQ,MANK,E,+DASAC,EAAWC,GAAY,IAAD,EACeC,KAAKR,MAAnDK,EAD+B,EAC/BA,OAAQD,EADuB,EACvBA,UAAWF,EADY,EACZA,WAAYC,EADA,EACAA,WACpCD,IAAeM,KAAKP,MAAMC,YAC3BM,KAAKC,SAAS,CAAEP,aAAYC,aAAYE,SAAQD,gB,mDAKlD,OACE,wBAAIM,UAAU,qBACV,uCACA,qCACA,0CACA,4CACA,qCACA,qCACA,0C,iDAMN,IAAMC,EAAiB,GADE,EAEiBH,KAAKP,MAAvCG,EAFiB,EAEjBA,UAAWF,EAFM,EAENA,WAAYG,EAFN,EAEMA,OAgB/B,MAdiB,UAAdD,EACDC,EACCO,QAAO,SAAAC,GAAK,OAAIA,EAAMC,UAAYZ,KAClCa,KAAI,SAAAF,GAAK,OAAIF,EAAeK,KAAKH,MACZ,QAAdT,GACRC,EACCO,QAAO,SAAAC,GAAK,OAAIA,EAAMI,QAAUf,GAChBW,EAAMK,aAAehB,GACrBW,EAAMM,cAAgBjB,KACtCa,KAAI,SAAAF,GAAK,OAAIF,EAAeK,KAAKH,MAGNF,EAAeS,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEE,KAAOD,EAAEC,KAAQ,GAAK,KAExDR,KAAI,SAACF,EAAOW,GACvC,OAAGX,EAAMY,SAEL,wBAAIC,IAAKF,GACP,wBAAId,UAAU,mBAAmBG,EAAMU,MACvC,wBAAIb,UAAU,mBAAmBG,EAAMc,UAAvC,SAAwDd,EAAMe,SAA9D,QAA6Ef,EAAMY,UACnF,wBAAIf,UAAU,mBAAmBG,EAAMgB,WACvC,wBAAInB,UAAU,mBAAmBG,EAAMiB,cAAvC,IAAuDjB,EAAMkB,eAC7D,wBAAIrB,UAAU,mBAAmBG,EAAMmB,OACvC,wBAAItB,UAAU,mBAAmBG,EAAMoB,OACvC,wBAAIvB,UAAU,mBAAmBG,EAAMqB,UAGnCrB,EAAMe,SAEZ,wBAAIF,IAAKF,GACP,wBAAId,UAAU,mBAAmBG,EAAMU,MACvC,wBAAIb,UAAU,mBAAmBG,EAAMc,UAAvC,SAAwDd,EAAMe,UAC9D,wBAAIlB,UAAU,mBAAmBG,EAAMgB,WACvC,wBAAInB,UAAU,mBAAmBG,EAAMiB,cAAvC,IAAuDjB,EAAMkB,eAC7D,wBAAIrB,UAAU,mBAAmBG,EAAMmB,OACvC,wBAAItB,UAAU,mBAAmBG,EAAMoB,OACvC,wBAAIvB,UAAU,mBAAmBG,EAAMqB,UAKvC,wBAAIR,IAAKF,GACP,wBAAId,UAAU,mBAAmBG,EAAMU,MACvC,wBAAIb,UAAU,mBAAmBG,EAAMc,WACvC,wBAAIjB,UAAU,mBAAmBG,EAAMgB,WACvC,wBAAInB,UAAU,mBAAmBG,EAAMiB,cAAvC,IAAuDjB,EAAMkB,eAC7D,wBAAIrB,UAAU,mBAAmBG,EAAMmB,OACvC,wBAAItB,UAAU,mBAAmBG,EAAMoB,OACvC,wBAAIvB,UAAU,mBAAmBG,EAAMqB,e,+BAOzC,IACA/B,EAAeK,KAAKP,MAApBE,WACR,OAAIK,KAAKP,MAAMC,WAIX,yBAAKQ,UAAU,mBACb,2BAAOA,UAAU,wBACf,+BACE,4BACE,wBAAIyB,QAAQ,IAAIzB,UAAU,sBAAsBP,IAE/CK,KAAK4B,8BAEV,+BACG5B,KAAK6B,8BAZP,wBAAI3B,UAAU,oBAAd,gC,GA7FiB4B,c,QCuHfC,G,yDAtHb,WAAYvC,GAAQ,IAAD,8BACjB,cAAMA,IACCC,MAAQ,CACXC,WAAY,KACZC,WAAY,KACZC,UAAW,KACXC,OAAQ,KACRmC,yBAA0B,IAPb,E,+DAUAlC,EAAWC,GAAY,IAAD,EACeC,KAAKR,MAAnDK,EAD+B,EAC/BA,OAAQD,EADuB,EACvBA,UAAWF,EADY,EACZA,WAAYC,EADA,EACAA,WACpCD,IAAeM,KAAKP,MAAMC,YAC3BM,KAAKC,SAAS,CAAEP,aAAYC,aAAYE,SAAQD,gB,mDAKlD,OACE,wBAAIM,UAAU,yBACV,uCACA,2CACA,4C,iDAKoB,IAAD,EACiBF,KAAKP,MAAvCG,EADiB,EACjBA,UAAWF,EADM,EACNA,WAAYG,EADN,EACMA,OACzBM,EAAiB,GAGN,UAAdP,EACDC,EACCO,QAAO,SAAAC,GAAK,OAAIA,EAAMC,UAAYZ,KAClCa,KAAI,SAAAF,GAAK,OAAIF,EAAeK,KAAKH,MACZ,QAAdT,GACRC,EACCO,QAAO,SAAAC,GAAK,OAAIA,EAAMI,QAAUf,GAChBW,EAAMK,aAAehB,GACrBW,EAAMM,cAAgBjB,KACtCa,KAAI,SAAAF,GAAK,OAAIF,EAAeK,KAAKH,MAGpC,IAAM4B,EAAkB,YAAO,IAAIC,IAAI/B,EAAeI,KAAI,SAAAF,GAAK,OAAIA,EAAMU,UAGrEoB,EAAkB,GAClBC,EAAqB,GAEzBH,EAAmB1B,KAAI,SAACQ,GACtB,IAAIsB,EAAgB,EAChBC,EAAgB,GACpBnC,EAAeI,KAAI,SAACF,GACfU,IAASV,EAAMU,OAChBsB,IACAC,EAAc9B,KAAKH,EAAMmB,WAG7BW,EAAgB3B,KAAK6B,GACrBD,EAAmB5B,KAAK8B,MAI1B,IAAMC,EAAgBH,EAAmB7B,KAAI,SAACiC,GAG5C,OAFYA,EAAaC,QAAO,SAAC5B,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,GAC9B0B,EAAaE,QAAW,GAChCC,QAAQ,MAgBrB,OAZgCV,EAAmB1B,KAAI,SAACQ,EAAMC,GAC5D,MAAO,CACLD,KAAMkB,EAAmBjB,GACzB4B,aAAcT,EAAgBnB,GAC9B6B,aAAcN,EAAcvB,OAKkBJ,MAAK,SAASC,EAAEC,GAAG,OAAOA,EAAE+B,aAAahC,EAAEgC,gBAGpEtC,KAAI,SAACuC,EAAU9B,GACtC,OACE,wBAAIE,IAAKF,GACP,wBAAId,UAAU,qBAAqB4C,EAAS/B,MAC5C,wBAAIb,UAAU,uBAAuB4C,EAASF,cAC9C,wBAAI1C,UAAU,yBAAyB4C,EAASD,oB,+BAM9C,IACAlD,EAAeK,KAAKP,MAApBE,WACR,OAAIK,KAAKP,MAAMC,WAIX,yBAAKQ,UAAU,mBACb,2BAAOA,UAAU,wBACf,+BACE,4BACE,wBAAIyB,QAAQ,IAAIzB,UAAU,qBAAqBP,IAE9CK,KAAK+C,8BAEV,+BACG/C,KAAKgD,8BAZP,wBAAI9C,UAAU,oBAAd,wC,GAlGkB4B,c,UCGOmB,EAAQ,MAA7BC,G,EAATC,Q,EAASD,SAyIFE,G,EAzIWC,Q,kDAGxB,WAAY7D,GAAQ,IAAD,8BACjB,cAAMA,IAwBR8D,kBAAoB,SAACC,EAAGC,GACtB,EAAKC,KAAKlD,IAAImD,WAAWC,IAAIC,OAC3B,IAAMC,EAAiBX,EAAQM,GAC/B,EAAKvD,SAAS,CAAE6D,eAAgBN,EAAWK,oBA5B5B,EA+BnBE,WAAa,WAAO,IAAD,EACY,EAAKvE,MAA1BK,EADS,EACTA,OAAQmE,EADC,EACDA,SAChB,EAAK/D,SAAS,CAAEJ,SAAQmE,aAExB,IAAIC,EAAc,GAElBpE,EACGO,QAAO,SAAAC,GAAK,MAAsB,aAAlBA,EAAMC,SAA4C,MAAlBD,EAAMC,WACtDC,KAAI,SAACF,GACDA,EAAM6D,oBACPD,EAAYzD,KAAKH,EAAM6D,oBAAqB7D,EAAM8D,mBAAoB9D,EAAMC,SACnED,EAAM8D,mBACfF,EAAYzD,KAAKH,EAAM8D,mBAAoB9D,EAAMC,SAEjD2D,EAAYzD,KAAKH,EAAMC,YAI7B,IAAM8D,EAAyBH,EAAYxB,QAAO,SAAS4B,EAAKtD,GAE9D,OADAsD,EAAItD,IAASsD,EAAItD,IAAS,GAAK,EACxBsD,IACN,IAEH,EAAKpE,SAAS,CAAEJ,SAAQmE,WACNM,aAAcF,KArD9B,EAAK3E,MAAQ,CACXI,OAAQ,KACRmE,SAAU,KACVM,aAAc,KACdR,eAAgB,KAChBD,eAAgB,MAPH,E,gEAYE7D,KAAKR,MAAhBK,QAENG,KAAK+D,e,yCAIUjE,EAAWC,GAAY,IAChCF,EAAWG,KAAKP,MAAhBI,OACLG,KAAKR,MAAMK,SAAWA,GACvBG,KAAK+D,e,+BAuCP,OAAI/D,KAAKR,MAAMK,OAIX,yBAAKK,UAAU,kBACb,yBAAKA,UAAU,iBACb,wBAAIA,UAAU,aAAd,aACA,kBAAC,EAAD,OAEF,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,OACb,kBAAC,YAAD,CACEK,IAAI,aACJgE,IAAK,MACLC,gBAAgB,UAChBC,cAAc,EACdC,eAAgB,CACdC,MAAO,OACPC,OAAQ,SAEVC,cAAe7E,KAAKsD,kBACpBwB,mBAAmB,MACnBC,YAAa,CACXC,QAAS,CACPC,KAAM,UACN,eAAgB,GAChBC,OAAQ,OACR,eAAgB,EAChB,iBAAkB,GAEpBC,MAAO,CACL,eAAgB,GAChBC,OAAQ,WAEVC,SAAU,CACRJ,KAAM,WAERK,cAAe,IAEjBC,mBAAmB,EACnBC,OAAQ,CACNC,QAAS,CACP,CACEC,OAAQ1F,KAAKP,MAAM6E,aACnBqB,MAAO,CAAC,WACRC,kBAAmB,mBAM7B,yBAAK1F,UAAU,mBACb,kBAAC,EAAD,CACEN,UAAU,QACVC,OAAQG,KAAKP,MAAMI,OACnBH,WAAYM,KAAKP,MAAMqE,eACvBnE,WAAYK,KAAKP,MAAMoE,mBAI7B,yBAAK3D,UAAU,oBACb,kBAAC,EAAD,CACEN,UAAU,QACVC,OAAQG,KAAKP,MAAMI,OACnBH,WAAYM,KAAKP,MAAMqE,eACvBnE,WAAYK,KAAKP,MAAMoE,mBAhExB,kB,GA9DU/B,cCRV+D,G,OACX,CACE,QAAS,WACT,QAAS,eACT,QAAS,YACT,QAAS,gBACT,QAAS,SACT,QAAS,QACT,QAAS,gBACT,QAAS,WACT,QAAS,SACT,QAAS,UACT,QAAS,aACT,QAAS,iBACT,QAAS,eACT,QAAS,WACT,QAAS,YACT,QAAS,eACT,QAAS,uBACT,QAAS,WACT,QAAS,UACT,QAAS,cACT,QAAS,aACT,QAAS,SACT,QAAS,YACT,QAAS,SACT,QAAS,WACT,QAAS,QACT,QAAS,OACT,QAAS,WACT,QAAS,QACT,QAAS,UACT,QAAS,OACT,QAAS,UACT,QAAS,WACT,QAAS,SACT,QAAS,aACT,QAAS,WACT,QAAS,WACT,QAAS,gBACT,QAAS,UACT,QAAS,WACT,QAAS,YACT,QAAS,aACT,QAAS,OACT,QAAS,WACT,QAAS,UACT,QAAS,UACT,QAAS,UACT,QAAS,cACT,QAAS,iBACT,QAAS,eACT,QAAS,aC0GEC,E,kDArJb,WAAYtG,GAAQ,IAAD,8BACjB,cAAMA,IAwBRuE,WAAa,WAAO,IAAD,EACY,EAAKvE,MAA1BK,EADS,EACTA,OAAQmE,EADC,EACDA,SAChB,EAAK/D,SAAS,CAAEJ,SAAQmE,aAExB,IAAI+B,EAAc,GAElBlG,EACCO,QAAO,SAAAC,GAAK,MAAsB,OAAlBA,EAAMC,WACtBC,KAAI,SAACF,GACiB,OAAlBA,EAAMC,SACPyF,EAAYvF,KAAKH,EAAMI,UAG3BZ,EACCO,QAAO,SAAAC,GAAK,MAAsB,OAAlBA,EAAMC,WACtBC,KAAI,SAACF,GAC4B,OAA7BA,EAAM8D,oBACP4B,EAAYvF,KAAKH,EAAMK,eAG3Bb,EACCO,QAAO,SAAAC,GAAK,MAAsB,OAAlBA,EAAMC,WACtBC,KAAI,SAACF,GAC6B,OAA9BA,EAAM6D,qBACP6B,EAAYvF,KAAKH,EAAMM,gBAI3B,IAAMqF,EAAwBD,EAAYtD,QAAO,SAAS4B,EAAKtD,GAE7D,OADAsD,EAAItD,IAASsD,EAAItD,IAAS,GAAK,EACxBsD,IACN,IAEAxE,IAAW,EAAKJ,MAAMI,QACvB,EAAKI,SAAS,CAAEJ,SAAQmE,WACRiC,UAAWD,KA5DZ,EAiEnB1C,kBAAoB,SAACC,EAAGC,GACtB,EAAKC,KAAKlD,IAAImD,WAAWC,IAAIC,OAC7B,cAA+CsC,OAAOC,QAAQN,GAA9D,eAA4E,CAAC,IAAD,sBAAhE/B,EAAgE,KAAhDD,EAAgD,KACtEL,IAAcM,GAChB,EAAK7D,SAAS,CAAE6D,iBAAgBD,qBAnElC,EAAKpE,MAAQ,CACXI,OAAQ,KACRmE,SAAU,KACViC,UAAW,KACXnC,eAAgB,KAChBD,eAAgB,MAPH,E,gEAYE7D,KAAKR,MAAhBK,QAENG,KAAK+D,e,yCAIUjE,EAAWC,GAAY,IAChCF,EAAWG,KAAKP,MAAhBI,OACLG,KAAKR,MAAMK,SAAWA,GACvBG,KAAK+D,e,+BAsDP,OAAI/D,KAAKR,MAAMK,OAIX,yBAAKK,UAAU,kBACb,yBAAKA,UAAU,iBACb,wBAAIA,UAAU,aAAd,UACA,kBAAC,EAAD,OAEF,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,OACb,kBAAC,YAAD,CACEK,IAAI,SACJgE,IAAK,MACLC,gBAAgB,UAChBC,cAAc,EACdC,eAAgB,CACdC,MAAO,OACPC,OAAQ,SAEVC,cAAe7E,KAAKsD,kBACpBwB,mBAAmB,MACnBC,YAAa,CACXC,QAAS,CACPC,KAAM,UACN,eAAgB,GAChBC,OAAQ,OACR,eAAgB,EAChB,iBAAkB,GAEpBC,MAAO,CACL,eAAgB,GAChBC,OAAQ,WAEVC,SAAU,CACRJ,KAAM,WAERK,cAAe,IAEjBC,mBAAmB,EACnBC,OAAQ,CACNC,QAAS,CACP,CACEC,OAAQ1F,KAAKP,MAAMwG,UACnBN,MAAO,CAAC,WACRC,kBAAmB,mBAM7B,yBAAK1F,UAAU,mBACb,kBAAC,EAAD,CACEN,UAAU,MACVC,OAAQG,KAAKP,MAAMI,OACnBH,WAAYM,KAAKP,MAAMqE,eACvBnE,WAAYK,KAAKP,MAAMoE,mBAI7B,yBAAK3D,UAAU,oBACb,kBAAC,EAAD,CACEN,UAAU,MACVC,OAAQG,KAAKP,MAAMI,OACnBH,WAAYM,KAAKP,MAAMqE,eACvBnE,WAAYK,KAAKP,MAAMoE,mBAhExB,kB,GA7EO/B,aC0FHsE,EAzFF,WAAO,IAAD,EACOC,oBAAS,GADhB,mBACZC,EADY,aAEeD,mBAAS,CAACxG,OAAQ,GAAI0G,YAAY,KAFjD,mBAEZC,EAFY,KAEDC,EAFC,OAGmBJ,mBAAS,CAACrC,SAAU,GAAIuC,YAAY,IAHvD,mBAGZG,EAHY,KAGCC,EAHD,KAiCnB,OA5BAC,qBAAU,YACS,uCAAG,4BAAA/F,EAAA,sEAEZ4F,EAAa,CAAC5G,OAAQ2G,EAAU3G,OAAQ0G,YAAY,IAFxC,SAGWM,IAAMC,IAZtB,gCASK,OAGNC,EAHM,OAIZN,EAAa,CAAC5G,OAAQkH,EAASC,KAAMT,YAAY,IAJrC,gDAMZU,QAAQC,IAAR,MACAT,EAAa,CAAC5G,OAAQ2G,EAAU3G,OAAQ0G,YAAY,IAPxC,yDAAH,qDAUjBY,KACC,IAEHP,qBAAU,YACW,uCAAG,4BAAA/F,EAAA,sEAEd8F,EAAe,CAAC3C,SAAU0C,EAAY1C,SAAUuC,YAAY,IAF9C,SAGSM,IAAMC,IAzBpB,qCAsBK,OAGRC,EAHQ,OAIdJ,EAAe,CAAC3C,SAAU+C,EAASC,KAAMT,YAAY,IAJvC,gDAMdU,QAAQC,IAAR,MACAP,EAAe,CAAC3C,SAAU0C,EAAY1C,SAAUuC,YAAY,IAP9C,yDAAH,qDAUnBa,KACC,IAGF,yBACGlH,UAAU,oBACVmH,KAAK,aACLC,aAAW,mBAEX,yBAAKpH,UAAU,iBACb,yBAAKA,UAAS,sBAAiBoG,GAAU,cACvC,yBAAKpG,UAAU,gBACb,kBAAC,IAAD,CACEA,UAAU,cACVqH,gBAAgB,YAChBC,GAAG,KAHL,cAQA,kBAAC,IAAD,CACEtH,UAAU,cACVqH,gBAAgB,YAChBC,GAAG,aAHL,YAQA,kBAAC,IAAD,CACEtH,UAAU,cACVqH,gBAAgB,YAChBC,GAAG,gBAHL,gBAQA,kBAAC,IAAD,CACEtH,UAAU,cACVqH,gBAAgB,YAChBC,GAAG,cAHL,aAQA,kBAAC,IAAD,CACEtH,UAAU,cACVqH,gBAAgB,YAChBC,GAAG,WAHL,gB,wBC/EG,SAASC,EAAT,GAAmC,IAAlBC,EAAiB,EAAjBA,QAASV,EAAQ,EAARA,KAAQ,EAETX,mBAAS,IAFA,mBAExCsB,EAFwC,KAE3BC,EAF2B,OAoB3CC,mBAAS,CACXH,UACAV,OACAc,aAAc,CAAEC,SAAU,KAE1BC,aACAC,YACAC,gBACAC,kBAvBAC,EAL6C,EAK7CA,cACAC,EAN6C,EAM7CA,kBACAC,EAP6C,EAO7CA,aACAC,EAR6C,EAQ7CA,KACAC,EAT6C,EAS7CA,SACAC,EAV6C,EAU7CA,SACAC,EAX6C,EAW7CA,aACAC,EAZ6C,EAY7CA,YACAC,EAb6C,EAa7CA,UACAC,EAd6C,EAc7CA,gBACAC,EAf6C,EAe7CA,YACAC,EAhB6C,EAgB7CA,YACAC,EAjB6C,EAiB7CA,WACAC,EAlB6C,EAkB7CA,UAlB6C,IAmB7CxJ,MAASyJ,EAnBoC,EAmBpCA,UAAWnB,EAnByB,EAmBzBA,SA6DtB,OAAIf,EAAKtE,OAIL,yBAAKxC,UAAU,sBACb,yBAAKA,UAAU,kBACb,uBAAGA,UAAU,mBAAb,sBAAmD,IACjD,2BACAiJ,MAAOxB,EACPyB,SA1DiB,SAAA7F,GACzB,IAAM4F,EAAQ5F,EAAE8F,OAAOF,YAASG,EAChCL,EAAU,YAAaE,GACvBvB,EAAeuB,IAwDPI,YAAa,wBAIjB,yBAAKrJ,UAAU,cACb,4BAAQsJ,QAAS,kBAAMhB,EAAS,IAAIiB,UAAWZ,GAC5C,MACO,IACV,4BAAQW,QAAS,kBAAMd,KAAgBe,UAAWZ,GAC/C,KACO,IACV,4BAAQW,QAAS,kBAAMf,KAAYgB,UAAWX,GAC3C,KACO,IACV,4BAAQU,QAAS,kBAAMhB,EAASI,EAAY,IAAIa,UAAWX,GACxD,MACO,IACV,qCACO,IACL,gCACGI,EAAY,EADf,OACsBP,EAAYjG,QACxB,KAEZ,4BACEyG,MAAOpB,EACPqB,SAAU,SAAA7F,GACRwF,EAAYW,OAAOnG,EAAE8F,OAAOF,UAG7B,CAAC,GAAI,GAAI,IAAK,IAAK,KAAK5I,KAAI,SAAAwH,GAAQ,OACnC,4BAAQ7G,IAAK6G,EAAUoB,MAAOpB,GAA9B,QACQA,QAnFD,IAAda,EACM,wCAED,2CAAWR,IAAX,CAA4BlI,UAAU,UACxC,+BACCoI,EAAa/H,KAAI,SAAAoJ,GAAW,OACzB,wCAAQA,EAAYC,sBAApB,CAA2C1J,UAAU,OAClDyJ,EAAYE,QAAQtJ,KAAI,SAAAuJ,GAAM,OAC7B,wCACMA,EAAOC,eAAeD,EAAOE,wBADnC,CAEE9J,UACE4J,EAAOG,SACHH,EAAOI,aACL,YACA,WACF,mBAGLJ,EAAOK,OAAO,mBAMzB,0BAAW9B,IACRE,EAAKhI,KAAI,SAAC6J,EAAKC,GAEd,OADArB,EAAWoB,GAET,wCAAQA,EAAIE,cAAZ,CAA2BpK,UAAU,OAClCkK,EAAIG,MAAMhK,KAAI,SAAAiK,GACb,OAAO,wCAAQA,EAAKC,eAAb,CAA6BvK,UAAU,OAC3CsK,EAAKL,OAAO,mBAYxB,2D,oFC/ELrC,G,OAAe,CACnB4C,UAAU,EACVC,YAAa,GACbC,WAAW,GACXC,WAAY,GACZC,UAAW,GACXzJ,UAAW,GACX0J,aAAc,GACdC,IAAK,GACLC,UAAU,EACV7J,SAAU,GACVH,SAAU,GACVK,cAAe,GACfC,cAAe,GACfC,MAAO,GACP0J,WAAW,EACXC,UAAW,GACXC,UAAW,GACX1J,QAAS,GACT2J,MAAO,GACPC,gBAAiB,GACjBC,iBAAiB,EACjBC,kBAAkB,EAClBC,UAAW,KCvBPC,GD0BqB5J,YC1Bb,SAAE4D,GACd,cAA0BQ,OAAOC,QAAQT,GAAzC,eAAkD,CAAC,IAAD,sBAAjCiG,GAAiC,WAC1CC,EAAU,IAAIC,KAAKF,GAEzB,OAAQC,EAAQE,UAAY,IADd,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACnDF,EAAQG,YAAe,IAAMH,EAAQI,cAAcC,WAAWC,QAAQ,MAoHlGC,MAhHjB,SAAkB3M,GAAQ,IAAD,EAEC6G,mBAAS7G,EAAMK,QAFhB,mBAEhBmH,EAFgB,KAEVoF,EAFU,KAIvBxF,qBAAU,WACR,sBAAC,sBAAA/F,EAAA,sDACCuL,EAAQ5M,EAAMK,QADf,0CAAD,KAGC,CAACL,IAEJ,IAAMkI,EAAU2E,mBACd,iBAAM,CACJ,CACEC,OAAQ,aACR5E,QAAS,CACP,CACE4E,OAAQ,OACRC,SAAU,OACV5H,MAAO,OAET,CACE2H,OAAQ,OACRC,SAAU,OACV5H,MAAO,KACP6H,KAAM,gBAAWrD,EAAX,EAAGqB,KAAQrB,MAAX,OAAyB,kBAAC,EAAD,CAAOzD,OAAQyD,MAEhD,CACEmD,OAAQ,iBACRC,SAAU,YACV5H,MAAO,OAET,CACE2H,OAAQ,aACRC,SAAU,YACV5H,MAAO,MAET,CACE2H,OAAQ,OACRC,SAAU,MACV5H,MAAO,KACP6H,KAAM,gBAAWrD,EAAX,EAAGqB,KAAQrB,MAAX,OAAyBsD,YAAoB,IAARtD,GAAaxG,QAAQ,IAAM,MAExE,CACE2J,OAAQ,mBACRC,SAAU,QACV5H,MAAO,OAET,CACE2H,OAAQ,qCACRC,SAAU,SAAAG,GAAC,OAAKA,EAAEC,SAAF,UACED,EAAEtL,SADJ,aACiBsL,EAAEzL,SADnB,aACgCyL,EAAEE,WADlC,aACiDF,EAAEG,UADnD,aACiEH,EAAEI,UADnE,aACiFJ,EAAEC,UACnFD,EAAEI,UAAF,UACEJ,EAAEtL,SADJ,aACiBsL,EAAEzL,SADnB,aACgCyL,EAAEE,WADlC,aACiDF,EAAEG,UADnD,aACiEH,EAAEI,WACnEJ,EAAEG,UAAF,UACEH,EAAEtL,SADJ,aACiBsL,EAAEzL,SADnB,aACgCyL,EAAEE,WADlC,aACiDF,EAAEG,WACnDH,EAAEE,WAAF,UACEF,EAAEtL,SADJ,aACiBsL,EAAEzL,SADnB,aACgCyL,EAAEE,YAClCF,EAAEzL,SAAF,UACEyL,EAAEtL,SADJ,aACiBsL,EAAEzL,UACnByL,EAAEtL,SAAF,UACEsL,EAAEtL,UAAa,KAEnC,CACEkL,OAAQ,eACRC,SAAU,SAAAG,GAAC,gBAAOA,EAAEpL,cAAT,aAA2BoL,EAAEnL,gBACxCoD,MAAO,OAET,CACE2H,OAAQ,QACRC,SAAU,QACV5H,MAAO,MAET,CACE2H,OAAQ,kBACR3H,MAAO,MACP4H,SAAU,SAAAG,GAAC,OAAKA,EAAEK,oBAAF,UACXL,EAAEM,mBADS,aACcN,EAAEK,qBAC7BL,EAAEM,mBAAF,UACEN,EAAEM,oBAAsB,KAE/B,CACEV,OAAQ,UACRC,SAAU,UACV5H,MAAO,OAET,CACE2H,OAAQ,QACRC,SAAU,cAKlB,IAEF,OAAIvF,EAIF,6BACE,6BACE,wBAAI9G,UAAU,aAAd,gCACA,kBAAC,EAAD,OAGF,yBAAKA,UAAU,OACb,kBAAC,EAAD,CAAOwH,QAASA,EAASV,KAAMA,MAV5B,4D,iBC4UIiG,G,wDAlbb,WAAYzN,GAAQ,IAAD,8BACjB,cAAMA,IAgGR0N,WAAW,SAACC,GACV,IAAIC,EAAiBD,EAAM9D,OAAOF,MAClC,EAAKlJ,SAAS,CAAEoN,WAAYD,KAnGX,EAsGnBE,kBAAoB,WAClB,IAAMC,EAAkB,EAAK9N,MAAM+N,aAC7BC,EAAkB,EAAKhO,MAAMiO,aACnC,EAAKzN,SAAS,CAAEuN,cAAeD,EACfG,cAAeD,KAxG7B,EAAKhO,MAAQ,CACXI,OAAQ,KACRyB,cAAe,GACfC,cAAe,GACfoM,eAAgB,GAChBC,kBAAmB,KACnBP,WAAY,KACZQ,YAAa,GACbC,YAAa,GACbC,kBAAmB,GACnBC,iBAAkB,KAClBC,UAAW,KACXT,cAAc,EACdE,cAAc,GAfD,E,gEAmBE,IACX7N,EAAWG,KAAKR,MAAhBK,OACRG,KAAKC,SAAS,CAAEJ,a,yCAGCC,EAAWC,GAAY,IAAD,OAC/BF,EAAWG,KAAKP,MAAhBI,OAER,GAAGE,EAAUF,SAAWG,KAAKR,MAAMK,OAAQ,CACzCG,KAAKC,SAAS,CAAEJ,OAAQG,KAAKR,MAAMK,SAEnC,IAAIqO,EAAW,GAYTC,EAAmB,WACvB,EAAKlO,SAAS,CAAE0N,eAAgBO,IAChC,IAAME,EAAqBF,EAASzL,QAAO,SAAS4B,EAAKgK,GAEvD,OADAhK,EAAIgK,IAAShK,EAAIgK,IAAS,GAAK,EACxBhK,IACN,IACGuJ,EAAoB,GAC1B,IAAI,IAAMS,KAAQD,EAChBR,EAAkBpN,KAAK,CAAC6N,EAAMD,EAAmBC,KAEnDT,EAAkBhN,MAAK,SAASC,EAAGC,GACjC,OAAOA,EAAE,GAAKD,EAAE,MAElB,EAAKZ,SAAS,CAAE2N,kBAAmBA,KAtBhC/N,IACD,EAAKJ,MAAMI,OAAOU,KAAI,SAACF,GACrB6N,EAAS1N,KAAKH,EAAMiB,eACpB4M,EAAS1N,KAAKH,EAAMkB,kBAEtB4M,Q,yCAyBN,OACA,4BACE,2CACA,6C,uCAKc,IAAD,OACf,OAAInO,KAAKP,MAAMmO,kBAON5N,KAAKP,MAAMmO,kBACjBxN,QAAO,SAACiO,GACP,OAA6B,OAA1B,EAAK5O,MAAM4N,YAENgB,EAAK,GAAGC,cAAcC,SAAS,EAAK9O,MAAM4N,WAAWiB,eADlDD,OACN,KAGN9N,KAAI,SAAC8N,EAAMrN,GACV,OACE,wBAAIE,IAAKF,EAAOwI,QAAS,kBAAM,EAAKgF,aAAaH,EAAK,MACpD,wBAAInO,UAAU,cAAcmO,EAAK,IACjC,wBAAInO,UAAU,cAAcmO,EAAK,QAhBrC,4BACE,6C,mCAkCKR,GACX7N,KAAKC,SAAS,CAAE4N,cAAaC,YAAa,KAC1C,IAAMG,EAAY,GACZF,EAAoB,GAC1B/N,KAAKP,MAAMI,OAAOU,KAAI,SAACkO,EAAWzN,GAC7ByN,EAAUnN,eAAiBuM,GAC5BY,EAAUlN,eAAiBsM,IACzBI,EAAUzN,KAAKiO,EAAU1N,MACzBgN,EAAkBvN,KAAKiO,OAG7BzO,KAAKC,SAAS,CAAE8N,sBAChB,IAAMW,EAAwBT,EAAUxL,QAAO,SAAS4B,EAAKtD,GAE3D,OADAsD,EAAItD,IAASsD,EAAItD,IAAS,GAAK,EACxBsD,IACN,IACGsK,EAAqB,GAC3B,IAAI,IAAM5N,KAAQ2N,EAChBC,EAAmBnO,KAAK,CAACO,EAAM2N,EAAsB3N,KASvD,IAAM6N,EAAoBD,EAAmB/N,MAN7C,SAA6BC,EAAGC,GAC9B,OAAID,EAAE,GAAKC,EAAE,GAAW,EACpBD,EAAE,GAAKC,EAAE,IAAY,EAClB,KAKH+N,EAAe,GACrBD,EAAkBrO,KAAI,SAACkO,GACrBI,EAAarO,KAAKiO,EAAU,OAG9B,IAAMK,EAAY,CAChBC,OAAQF,EACRG,SAAU,CAAC,CACTC,MAAM,GAAD,OAAKpB,GACV7G,KAAM,GACNxC,gBAAiB,CACf,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,WAExB0K,YAAa,EACbC,YAAa,CACX,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,WAExBC,iBAAkB,EAClBC,qBAAsB,CACpB,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,cAK5BT,EAAkBrO,KAAI,SAACkO,GACrBK,EAAUE,SAAS,GAAGhI,KAAKxG,KAAKiO,EAAU,OAE5CzO,KAAKC,SAAS,CAAE+N,iBAAkBc,M,uDAGF,IAAD,EACyB9O,KAAKP,MAArDsO,EADuB,EACvBA,kBAAmBF,EADI,EACJA,YAAaC,EADT,EACSA,YACxC,GAAIA,EAMG,CACL,IAAIwB,EAAc,EAMlB,OALAvB,EAAkBxN,KAAI,SAACF,GAClBA,EAAMU,OAAS+M,IAChBwB,GAA4B,MAIhC,4BACE,4BAAKxB,EAAL,cAA6BD,EAA7B,SAAgDyB,EAAhD,eAdF,OACE,4BACE,4BAAKvB,EAAkBrL,OAAvB,qBAAiDmL,EAAjD,Q,yCAmBN7N,KAAKC,SAAS,CAAE6N,YAAa,KAC7B9N,KAAKuP,4B,gDAGoB,IAAD,EACgCvP,KAAKP,MAArDoO,EADgB,EAChBA,YAAaE,EADG,EACHA,kBAAmBD,EADhB,EACgBA,YACxC,OAAID,EAEOC,EAsCAC,EAAkBxN,KAAI,SAACF,EAAOW,GACnC,OAAGX,EAAMY,UAAYZ,EAAMU,OAAS+M,EAEhC,wBAAI5M,IAAKb,EAAMmP,KACb,4BACGxO,EAAQ,EADX,KACe,0BAAMd,UAAU,oBAAoBG,EAAMc,UAA1C,SAA2Dd,EAAMe,SAAjE,QAAgFf,EAAMY,UADrG,KAEE,0BAAMf,UAAU,sBAAhB,IAAuCG,EAAMiB,cAA7C,KAA8DjB,EAAMkB,eAFtE,KAGE,0BAAMrB,UAAU,gBAAhB,IAAiCG,EAAMmB,MAAvC,OAHF,MAOInB,EAAMe,UAAYf,EAAMU,OAAS+M,EAErC,wBAAI5M,IAAKb,EAAMmP,KACb,4BACGxO,EAAQ,EADX,KACe,0BAAMd,UAAU,oBAAoBG,EAAMc,UAA1C,SAA2Dd,EAAMe,UADhF,KAEE,0BAAMlB,UAAU,sBAAhB,IAAuCG,EAAMiB,cAA7C,KAA8DjB,EAAMkB,eAFtE,KAGE,0BAAMrB,UAAU,gBAAhB,IAAiCG,EAAMmB,MAAvC,OAHF,MAOEnB,EAAMU,OAAS+M,EAEnB,wBAAI5M,IAAKb,EAAMmP,KACb,4BACGxO,EAAQ,EADX,KACe,0BAAMd,UAAU,oBAAoBG,EAAMc,WADzD,KAEE,0BAAMjB,UAAU,sBAAhB,IAAuCG,EAAMiB,cAA7C,KAA8DjB,EAAMkB,eAFtE,KAGE,0BAAMrB,UAAU,gBAAhB,IAAiCG,EAAMmB,MAAvC,OAHF,WAHD,KA1DFuM,EAAkBxN,KAAI,SAACF,EAAOW,GACnC,OAAGX,EAAMY,SAEL,wBAAIC,IAAKb,EAAMmP,KACb,4BACCxO,EAAQ,EADT,KACa,0BAAMd,UAAU,+BAA+BG,EAAMU,KAArD,MACb,0BAAMb,UAAU,oBAAhB,IAAqCG,EAAMc,UAA3C,SAA4Dd,EAAMe,SAAlE,QAAiFf,EAAMY,UAFvF,KAGA,0BAAMf,UAAU,sBAAsBG,EAAMiB,cAA5C,KAA6DjB,EAAMkB,eAHnE,KAIA,0BAAMrB,UAAU,gBAAgBG,EAAMmB,MAAtC,OAJA,MAQInB,EAAMe,SAEV,wBAAIF,IAAKb,EAAMmP,KACb,4BACCxO,EAAQ,EADT,KACa,0BAAMd,UAAU,+BAA+BG,EAAMU,KAArD,MACb,0BAAMb,UAAU,oBAAhB,IAAqCG,EAAMc,UAA3C,SAA4Dd,EAAMe,UAFlE,KAGA,0BAAMlB,UAAU,sBAAsBG,EAAMiB,cAA5C,KAA6DjB,EAAMkB,eAHnE,KAIA,0BAAMrB,UAAU,gBAAhB,IAAiCG,EAAMmB,MAAvC,OAJA,MAUF,wBAAIN,IAAKb,EAAMmP,KACb,4BACGxO,EAAQ,EADX,KACe,0BAAMd,UAAU,+BAA+BG,EAAMU,KAArD,MACb,0BAAMb,UAAU,oBAAhB,IAAqCG,EAAMc,WAF7C,KAGE,0BAAMjB,UAAU,sBAAsBG,EAAMiB,cAA5C,KAA6DjB,EAAMkB,eAHrE,KAIE,0BAAMrB,UAAU,gBAAhB,IAAiCG,EAAMmB,MAAvC,OAJF,SA5BL,Y,8CA2Ec,IAAD,OACtB,OAAIxB,KAAKP,MAAMoO,aAQb4B,SAASC,KAAKC,UAAY,EAC1BF,SAASG,gBAAgBD,UAAY,EAEnC,6BACE,4BACEzP,UAAU,kBACViJ,MAAOnJ,KAAKwN,aACZpE,SAAUpJ,KAAKsN,mBAEf,6CACA,8CAEF,yBAAKpN,UAAWF,KAAKP,MAAM+N,aACvB,eAAgB,gBAClB,kBAAC,MAAD,CACExG,KAAMhH,KAAKP,MAAMuO,iBACjBrJ,MAAO,IACPC,OAAQ,IACRiL,gBAAiB,SAAAC,GACf,EAAK7P,SAAS,CAAE6N,YAAa,EAAKrO,MAAMuO,iBAAiBe,OAAOe,EAAQ,GAAGC,UAC3E,EAAKR,wBAAwB,EAAK9P,MAAMuO,iBAAiBe,OAAOe,EAAQ,GAAGC,UAE7EC,QAAS,CACPC,OAAQ,CAAC,aACTC,QAAS,SAAC/C,EAAOgD,GACfhD,EAAM9D,OAAO+G,MAAMhL,OAAS+K,EAAa,GAAK,UAAY,WAE5DE,MAAO,CACLC,SAAS,EACTC,KAAK,YAAD,OAAcvQ,KAAKP,MAAMoO,YAAzB,sBAAkD7N,KAAKP,MAAMsO,kBAAkBrL,OAA/E,KACJ8N,SAAU,IAEZC,OAAQ,CACNC,SAAU,UAEZC,QAAS,CACP5B,OAAQ,CACN5E,OAAQ,SAAUyG,GAChB,MAAO,UAAGA,EAAK3B,MAAR,gBAAuB2B,EAAKzH,MAA5B,MAET0H,UAAW,QACXL,SAAU,GACVE,SAAU,UACVI,WAAY,QAMtB,yBAAK5Q,UAAWF,KAAKP,MAAMiO,aACvB,eAAgB,gBAClB,kBAAC,MAAD,CACE1G,KAAMhH,KAAKP,MAAMuO,iBACjBrJ,MAAO,IACPC,OAAQ,GACRiL,gBAAiB,SAAAC,GACf,EAAK7P,SAAS,CAAE6N,YAAa,EAAKrO,MAAMuO,iBAAiBe,OAAOe,EAAQ,GAAGC,UAC3E,EAAKR,wBAAwB,EAAK9P,MAAMuO,iBAAiBe,OAAOe,EAAQ,GAAGC,UAE7EC,QAAS,CACPC,OAAQ,CAAC,aACTC,QAAS,SAAC/C,EAAOgD,GACfhD,EAAM9D,OAAO+G,MAAMhL,OAAS+K,EAAa,GAAK,UAAY,WAE5DE,MAAO,CACLC,SAAS,EACTC,KAAK,YAAD,OAAcvQ,KAAKP,MAAMoO,YAAzB,sBAAkD7N,KAAKP,MAAMsO,kBAAkBrL,OAA/E,KACJ8N,SAAU,IAEZO,OAAQ,CACNC,MAAO,CAAC,CACJC,MAAO,CACHC,aAAa,EACbC,SAAU,MAIpBR,QAAS,CACL5B,QAAQ,SApFpB,yBAAK7O,UAAU,aACb,4DACA,gE,+BA4FE,IAAD,OAEP,OADA+G,QAAQC,IAAIlH,KAAKP,MAAMI,QACnBG,KAAKP,MAAMI,OAIX,yBAAKK,UAAU,YACb,yBAAKA,UAAU,YACVF,KAAKP,MAAMoO,YAEZ,wBAAI3N,UAAU,SAAd,YACU,0BAAMA,UAAU,oBAAoBF,KAAKP,MAAMoO,aADzD,KADA,wBAAI3N,UAAU,SAAd,0BAKJ,kBAAC,EAAD,MACA,yBAAKA,UAAU,cACb,yBAAKA,UAAW,kBACd,uBAAGA,UAAU,eAAb,mCACA,uBAAGA,UAAU,eAAb,kCACA,2BAAOA,UAAU,kBAAkBkR,KAAK,OAAO7H,YAAY,4BAA4BH,SAAU,SAAC7F,GAAD,OAAK,EAAK2J,WAAW3J,MACtH,2BAAOrD,UAAU,eACf,+BACGF,KAAKqR,oBAER,+BACGrR,KAAKsR,oBAIZ,yBAAKpR,UAAU,SACb,yBAAKA,UAAU,oBACZF,KAAKuR,0BAGV,yBAAKrR,UAAU,0BACb,2BAAOA,UAAU,oBACf,+BACGF,KAAKwR,kCAER,+BACGxR,KAAKuP,2BAENvP,KAAKP,MAAMqO,YACX,4BAAQtE,QAAS,kBAAM,EAAKiI,qBAA5B,2BACA,OAzCL,qD,GAhYY3P,cCkLV4P,G,yDAlLb,WAAYlS,GAAQ,IAAD,8BACjB,cAAMA,IAyCRuE,WAAa,WAAM,MAEyC,EAAKvE,MAAvDK,EAFS,EAETA,OAAQmE,EAFC,EAEDA,SAAU4G,EAFT,EAESA,WAAY+G,EAFrB,EAEqBA,gBACtC,EAAK1R,SAAS,CAAEJ,SAAQmE,WAAU4G,aAAY+G,oBAH7B,MAIgB,EAAKlS,MAA9BmS,EAJS,EAITA,WAAYC,EAJH,EAIGA,SAGhBC,EAAgB,GAChBC,EAAiB,GAErBnH,EAAWrK,KAAI,SAACyR,GACdF,EAActR,KAAKwR,EAAQ3Q,WAC3B,IAAI4Q,EAAsB,GAC1BpS,EAAOU,KAAI,SAACuC,IACa,iBAApB6O,GAAsC7O,EAASzB,YAAc2Q,EAAQ3Q,WAE9DyB,EAASzB,YAAc2Q,EAAQ3Q,WAAasQ,IAAoB7O,EAAS/B,OADjFkR,EAAoBzR,KAAKsC,MAK7BiP,EAAevR,KAAKyR,MAItB,IAAIC,EAAoB,GACxBH,EAAexR,KAAI,SAAC4R,GAClBD,EAAkB1R,KAAK2R,EAAMzP,WAI/B,IAAM0P,EAAmB,CACvBrD,OAAQ+C,EACN9C,SAAU,CAAC,CACTC,MAAO,EAAKxP,MAAMkS,gBAClB3K,KAAMkL,EACN1N,gBAAiB,EAAK/E,MAAM4S,UAAYT,EAAYC,EACpD1C,YAAa,uBAGnB,EAAKlP,SAAS,CAAEmS,sBAjFC,EAqFnB9E,kBAAoB,WAClB,IAAMgF,EAAoB,EAAK7S,MAAM4S,UAC/B5E,EAAkB,EAAKhO,MAAM8S,QACnC,EAAKtS,SAAS,CAAEoS,WAAYC,EACZC,SAAU9E,KAvFxB,EAAKhO,MAAQ,CACXI,OAAQ,KACRmE,SAAU,KACV4G,WAAY,KACZ+G,gBAAiB,eACjBS,iBAAkB,KAClBC,WAAW,EACXE,SAAS,EACTX,WAAY,CAAC,sBACbC,SAAU,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAClE,UAAW,UAAW,UAAW,UAAW,UAAW,YAZ1C,E,gEAiBE7R,KAAKR,MAAhBK,QAENG,KAAK+D,e,yCAIUjE,EAAWC,GAC5B,IAAMyS,EAAoBxS,KAAKR,MAAMK,OAC/B4S,EAAsBzS,KAAKR,MAAMwE,SACjC0O,EAAwB1S,KAAKR,MAAMoL,WACnC+H,EAAyB3S,KAAKR,MAAMmS,gBACvCa,IAAsBxS,KAAKP,MAAMI,QAClCG,KAAKC,SAAS,CAAEJ,OAAQ2S,EACRxO,SAAUyO,EACV7H,WAAY8H,EACZf,gBAAiBgB,IAIhC5S,EAAU4R,kBAAoBgB,GAC9B5S,EAAUsS,YAAcrS,KAAKP,MAAM4S,WACnCrS,KAAK+D,e,2CAuDR,OAAI/D,KAAKP,MAAMI,OAIX,6BAEI,4BACEK,UAAU,kBACViJ,MAAOnJ,KAAKqS,UACZjJ,SAAUpJ,KAAKsN,mBAEf,+CACA,8CAGF,yBAAKpN,UAAWF,KAAKP,MAAM4S,UACzB,kBAAmB,oBACnB,kBAAC,QAAD,CACErL,KAAMhH,KAAKP,MAAM2S,iBACjBzN,MAAO,GACPC,OAAQ,GACRoL,QAAS,CACPK,MAAO,CACLC,SAAS,EACTC,KAAK,GAAD,OAAKvQ,KAAKP,MAAMkS,iBACpBnB,SAAU,IAEZ7K,MAAO,CACLsL,MAAO,CACL2B,EAAG,EACHC,SAAU,SAAU1J,GAAS,OAAIO,OAAOoJ,UAAU3J,GAAiBA,EAAuB,KAE5F4J,YAAa,CACXvC,SAAU,KAGdC,OAAQ,CACNC,SAAU,SACV3B,OAAQ,CACNyB,SAAU,SAMlB,yBAAKtQ,UAAWF,KAAKP,MAAM8S,QACzB,gBAAiB,kBACjB,kBAAC,MAAD,CACEvL,KAAMhH,KAAKP,MAAM2S,iBACjBzN,MAAO,IACPC,OAAQ,GACRoL,QAAS,CACPW,QAAS,CACP5B,OAAQ,CACN5E,OAAQ,SAAUyG,GAChB,MAAM,GAAN,OAAUA,EAAKzH,UAIrB6J,OAAQ,CACNC,QAAS,CACPC,IAAK,KAGTzC,OAAQ,CACNC,SAAU,eAhEnB,8C,+BA4ET,OACE,6BACG1Q,KAAKmT,0B,GA7KWrR,cCyPVsR,G,+DAzPb,WAAY5T,GAAQ,IAAD,8BACjB,cAAMA,IACCC,MAAQ,CACXI,OAAQ,KACRmE,SAAU,KACV4G,WAAY,KACZ+G,gBAAiB,eACjB0B,gBAAiB,KACjBC,kBAAmB,KACnBC,oBAAqB,KACrB3S,KAAM,CACJkJ,OAAQ,KACR0J,UAAW,SAZA,E,gEAiBI,IAAD,EAC4ExT,KAAKR,MAA3FK,EADU,EACVA,OAAQmE,EADE,EACFA,SAAU4G,EADR,EACQA,WAAY+G,EADpB,EACoBA,gBAAiB0B,EADrC,EACqCA,gBAAiBC,EADtD,EACsDA,kBACxEtT,KAAKC,SAAS,CAAEJ,SAAQmE,WAAU4G,aAAY+G,kBAAiB0B,kBAAiBC,wB,2CAIhFtT,KAAK2G,mB,4CAGgB,IAAD,OACpB,OACE,4BACE,wBAAIzG,UAAU,qBAAqBsJ,QAAS,SAAAjG,GAAC,OAAI,EAAKkQ,OAAO,iBAA7D,QACA,wBAAIvT,UAAU,qBAAqBsJ,QAAS,SAAAjG,GAAC,OAAI,EAAKkQ,OAAO,eAA7D,oBACA,wBAAIvT,UAAU,qBAAqBsJ,QAAS,SAAAjG,GAAC,OAAI,EAAKkQ,OAAO,kBAA7D,sBACA,wBAAIvT,UAAU,qBAAqBsJ,QAAS,SAAAjG,GAAC,OAAI,EAAKkQ,OAAO,uBAA7D,wBACA,wBAAIvT,UAAU,qBAAqBsJ,QAAS,SAAAjG,GAAC,OAAI,EAAKkQ,OAAO,wBAA7D,sBACA,wBAAIvT,UAAU,qBAAqBsJ,QAAS,SAAAjG,GAAC,OAAI,EAAKkQ,OAAO,qBAA7D,wBACA,wBAAIvT,UAAU,qBAAqBsJ,QAAS,SAAAjG,GAAC,OAAI,EAAKkQ,OAAO,sBAA7D,sBACA,wBAAIvT,UAAU,qBAAqBsJ,QAAS,SAAAjG,GAAC,OAAI,EAAKkQ,OAAO,qBAA7D,qBACA,wBAAIvT,UAAU,qBAAqBsJ,QAAS,SAAAjG,GAAC,OAAI,EAAKkQ,OAAO,qBAA7D,iBACA,wBAAIvT,UAAU,qBAAqBsJ,QAAS,SAAAjG,GAAC,OAAI,EAAKkQ,OAAO,4BAA7D,kC,uCAMJ,IAAIzT,KAAKP,MAAMI,OACb,MAAO,cACD,IAAD,EAEwBG,KAAKP,MAA1BI,EAFH,EAEGA,OAAQmE,EAFX,EAEWA,SACZ0P,EAAoB,GACpBH,EAAsB,GAG1BvP,EAASzD,KAAI,SAACoT,GACZ,IAAIC,EAAkB,GACtB/T,EAAOU,KAAI,SAACF,GACPA,EAAMU,OAAS4S,EAAQA,SACxBC,EAAgBpT,KAAKH,MAGzBqT,EAAkBlT,KAAKoT,MAIvBF,EAAkBnT,KAAI,SAACsT,GAErB,IAAMC,EAAcD,EACnBtT,KAAI,SAAAF,GAAK,OAAIA,EAAMU,QACnBX,QAAO,SAAC+I,EAAOnI,EAAO+S,GAAf,OAAwBA,EAAKC,QAAQ7K,KAAWnI,KAGlDsO,EAAcuE,EAAYnR,OAG5BuR,EAAiB,GACrBJ,EAAYtT,KAAI,SAACF,GACf,IAAM6T,EAAY,IAAIrI,KAAKxL,EAAMsL,MAC3BA,GAAQuI,EAAUpI,UAAY,IAAMoI,EAAUnI,WAAa,IAAMmI,EAAUlI,cACjFiI,EAAezT,KAAKmL,MAEtB,IAAMwI,EAAqB,IAAIjS,IAAI+R,GAAgBG,KAG7CC,GAAa/E,EAAc6E,GAAmBxR,QAAQ,GAGxD2R,EAAoB,GACxBT,EAAYtT,KAAI,SAACF,GACfiU,EAAkB9T,KAAKH,EAAM2K,UACZ1B,IAAdjJ,EAAM2K,KACP/D,QAAQC,IAAI7G,EAAMc,cAGtB,IACMoT,GADYD,EAAkB7R,QAAO,SAAC5B,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,GACjBwT,EAAkB5R,OAAQ,KAAKC,QAAQ,GAAK,MAAO,EAG1F6R,EAAuB,GAC3BX,EAAYtT,KAAI,SAACF,GAAD,OAAWmU,EAAqBhU,KAAKH,EAAMgB,cAC3D,IAEIoT,EAFAC,EAAY,GACZC,EAAU,EAEd,IAAI,IAAIvD,KAAQoD,EACdE,EAAUF,EAAqBpD,KAAQsD,EAAUF,EAAqBpD,KAAU,GAAG,EAChFsD,EAAUF,EAAqBpD,IAASuD,IACzCA,EAAUD,EAAUF,EAAqBpD,IACzCqD,EAAqBD,EAAqBpD,IAI9C,IAAIwD,EAAmB,GACvBf,EAAYtT,KAAI,SAACF,GAAD,OAAWuU,EAAiBpU,KAAKH,EAAMmB,UACvD,IAAMqT,EAAeC,KAAKC,IAAL,MAAAD,KAAYF,GAC3BI,EAAcF,KAAKG,IAAL,MAAAH,KAAYF,GAG1B/R,EAFmB,SAAA+R,GAAgB,OAAIA,EAAiBnS,QAC5D,SAACyS,EAAWC,GAAZ,OAA0BD,EAAYC,IAAW,GAAMP,EAAiBlS,OACpD0S,CAAiBR,GAAmBjS,QAAQ,GAG5D0S,GAAmBxB,EAAYnR,OAAS7C,EAAO6C,OAAU,KAAKC,QAAQ,GAAK,IAE3E2S,EAAgB,CACpBxB,YAAaA,EAAY,GACzByB,UAAWjG,EACXkG,aAAcrB,EACdsB,kBAAmBpB,EACnBqB,mBAAoBnB,EACpBoB,gBAAiBlB,EACjBmB,iBAAkBf,EAClBgB,gBAAiBb,EACjBc,gBAAiBjT,EACjBkT,uBAAwBV,GAE1B9B,EAAoB/S,KAAK8U,MAEzBtV,KAAKP,MAAM8T,qBACbvT,KAAKC,SAAS,CAAEsT,0B,0CAKD,IAAD,EACsBvT,KAAKP,MAArCI,EADU,EACVA,OAAQ0T,EADE,EACFA,oBAGVyC,EAAa,GACjBnW,EAAOU,KAAI,SAACF,GACV,IAAM4V,EAAgB,IAAIpK,KAAKxL,EAAMsL,MAC/BuK,GAAiBD,EAAcnK,UAAY,IAAMmK,EAAclK,WAAa,IAAMkK,EAAcjK,cACtGgK,EAAWxV,KAAK0V,MAElB,IAAMC,EAAoB,IAAIjU,IAAI8T,GAAY5B,KAG9C,OAAOb,EAAoBhT,KAAI,SAAC6V,EAAYpV,GAC1C,OACE,wBAAIE,IAAKF,GACP,4BAAKoV,EAAWtC,aAChB,4BAAKsC,EAAWb,WAChB,4BAAKa,EAAWZ,aAAhB,MAAiCW,EAAjC,KAAqD1J,WAAW2J,EAAWZ,aAAaW,EAAiB,KAAKxT,QAAQ,GAAtH,MACA,4BAAKyT,EAAWX,mBAChB,4BAAKW,EAAWV,oBAChB,4BAAKU,EAAWT,iBAChB,4BAAKS,EAAWR,kBAChB,4BAAKQ,EAAWP,iBAChB,4BAAKO,EAAWN,iBAChB,4BAAKM,EAAWL,8B,6BAMnBjM,GAAQ,IAAD,OACN0J,EAAYxT,KAAKP,MAAMmB,KAAKkJ,OAAwC,QAA9B9J,KAAKP,MAAMmB,KAAK4S,UAAsB,OAAS,MAAS,OA8CtF,gBAAX1J,EA3CoB,WACrB,IAAMuM,EAAmB,EAAK5W,MAAM8T,oBAAoB3S,MAAK,SAACC,EAAGC,GAC/D,IAAMwV,EAAYzV,EAAEiT,YAAYyC,cAC1BC,EAAa1V,EAAEgT,YAAYyC,cACjC,OAAID,EAAYE,GAAoB,EAC3BF,EAAYE,EAAmB,EACjC,KAES,SAAdhD,GAAsB6C,EAAiBI,UAC3C,EAAKxW,SAAS,CAAEsT,oBAAqB8C,EACrBzV,KAAM,CAAEkJ,SAAQ0J,eAkChCkD,GACmB,oBAAX5M,EA9BkB,WAC1B,IAAM6M,EAAwB,EAAKlX,MAAM8T,oBAAoB3S,MAAK,SAACC,EAAGC,GACpE,IAAMwV,EAAYzV,EAAE8U,gBAAgBY,cAC9BC,EAAa1V,EAAE6U,gBAAgBY,cACrC,OAAID,EAAYE,GAAoB,EAC3BF,EAAYE,EAAmB,EACjC,KAES,SAAdhD,GAAsBmD,EAAsBF,UAChD,EAAKxW,SAAS,CAAEsT,oBAAqBoD,EACrB/V,KAAM,CAAEkJ,SAAQ0J,eAqBhCoD,GAjByB,WACzB,IAAMC,EAAsB,EAAKpX,MAAM8T,oBAAoB3S,MAAK,SAACC,EAAGC,GAClE,IAAMgW,EAAWrK,WAAW5L,EAAEiJ,IACxBiN,EAAYtK,WAAW3L,EAAEgJ,IAC/B,OAAIgN,EAAWC,GAAmB,EACzBD,EAAWC,EAAkB,EAC/B,KAES,SAAdvD,GAAsBqD,EAAoBJ,UAC9C,EAAKxW,SAAS,CAAEsT,oBAAqBsD,EACrBjW,KAAM,CAAEkJ,SAAQ0J,eAShCwD,K,+BAMJ,OADgChX,KAAKP,MAA7B8T,oBAKJ,6BACE,2BAAOrT,UAAU,iBACf,+BACGF,KAAKiX,uBAER,+BACGjX,KAAKkX,uBATP,gD,GAxOepV,cCuHXqV,G,yDApHf,WAAY3X,GAAQ,IAAD,8BACjB,cAAMA,IA0BRuE,WAAa,WAAM,MAEwB,EAAKvE,MAAtCK,EAFS,EAETA,OAAQmE,EAFC,EAEDA,SAAU4G,EAFT,EAESA,WAC1B,EAAK3K,SAAS,CAAEJ,SAAQmE,WAAU4G,eAGlC,IAAMzI,EAAkBtC,EAAO4C,QAAQ,SAAC2U,EAAKC,GAAN,OAAaD,EAAIC,EAAEtW,OAASqW,EAAIC,EAAEtW,OAAS,GAAG,EAAGqW,IAAM,IAC9F,EAAKnX,SAAS,CAAEkC,oBAKhB,IAFA,IAAIkR,EAAkB,GAClBC,EAAoB,GACxB,MAAiCpN,OAAOC,QAAQhE,GAAhD,eAAkE,CAAC,IAAD,sBAAtDmV,EAAsD,WAChD,GACdjE,EAAgB7S,KAAK8W,GAErBhE,EAAkB9S,KAAK8W,GAG3BjE,EAAgBzS,MAAK,SAAUC,EAAGC,GAChC,OAAOD,EAAE0W,cAAczW,MAEzBwS,EAAkB1S,MAAK,SAAUC,EAAGC,GAClC,OAAOD,EAAE0W,cAAczW,MAEzB,EAAKb,SAAS,CAAEoT,kBAAiBC,uBAlD/B,EAAK7T,MAAQ,CACXI,OAAQ,KACRmE,SAAU,KACV4G,WAAY,KACZ+G,gBAAiB,eACjBxP,gBAAiB,KACjBkR,gBAAiB,GACjBC,kBAAmB,IATN,E,gEAcEtT,KAAKR,MAAhBK,QAENG,KAAK+D,e,yCAIUjE,EAAWC,GAAY,IAChCF,EAAWG,KAAKP,MAAhBI,OACLG,KAAKR,MAAMK,SAAWA,GACvBG,KAAK+D,e,wCAgCU,IACTsP,EAAoBrT,KAAKP,MAAzB4T,gBACN,OAAOA,EAAgB9S,KAAI,SAACoT,EAAS3S,GACnC,OAAO,4BAAQE,IAAKF,EAAOmI,MAAOwK,GAAUA,Q,0CAI7B,IACXL,EAAsBtT,KAAKP,MAA3B6T,kBACN,OAAOA,EAAkB/S,KAAI,SAACoT,EAAS3S,GACrC,OAAO,4BAAQE,IAAKF,EAAOmI,MAAOwK,GAAUA,Q,sCAIjCxG,GACfnN,KAAKC,SAAS,CAAE0R,gBAAiBxE,EAAM9D,OAAOF,U,+BAI9C,OAAInJ,KAAKP,MAAMI,OAIb,yBAAKK,UAAU,qBACb,wBAAIA,UAAU,qBAAd,iBACA,kBAAC,EAAD,MACA,4BACEA,UAAU,gBACVkJ,SAAUpJ,KAAKwX,gBAAgBC,KAAKzX,MACpCmJ,MAAOnJ,KAAKP,MAAMkS,iBAElB,4BAAQxI,MAAM,gBAAd,gBACA,8BAAU8F,MAAM,qBACbjP,KAAKqT,mBAER,8BAAUpE,MAAM,uBACbjP,KAAKsT,sBAGV,yBAAKpT,UAAU,kBACb,yBAAKA,UAAU,oBACb,kBAAC,EAAD,CAAYL,OAAQG,KAAKP,MAAMI,OACnBmE,SAAUhE,KAAKP,MAAMuE,SACrB4G,WAAY5K,KAAKP,MAAMmL,WACvB+G,gBAAiB3R,KAAKP,MAAMkS,mBAE1C,yBAAKzR,UAAU,iBACb,kBAAC,EAAD,CAAeL,OAAQG,KAAKP,MAAMI,OACtBmE,SAAUhE,KAAKP,MAAMuE,SACrB4G,WAAY5K,KAAKP,MAAMmL,WACvB+G,gBAAiB3R,KAAKP,MAAMkS,gBAC5B0B,gBAAiBrT,KAAKP,MAAM4T,gBAC5BC,kBAAmBtT,KAAKP,MAAM6T,uBAhCzC,kB,GA5EUxR,c,iBCMR4V,EATK,WAAO,IACjBC,EAAsBC,cAAtBD,kBACR,OACE,4BAAQnO,QAAS,kBAAMmO,MAAvB,UCMWE,EATM,WAAO,IAClBC,EAAWF,cAAXE,OACR,OACE,4BAAQtO,QAAS,kBAAMsO,MAAvB,WCOEC,E,kDAEJ,WAAYvY,GAAQ,IAAD,8BACjB,cAAMA,IACCC,MAAQ,CACXI,OAAQ,KACRmE,SAAU,KACV4G,WAAY,MALC,E,gEASE,IAAD,OACZoN,EAAkBnR,IAAMC,IAAI,qCAC5BmR,EAAgBpR,IAAMC,IAAI,gCAC1BoR,EAAoBrR,IAAMC,IAAI,oCACpCD,IAAMsR,IAAI,CAACH,EAAiBC,EAAeC,IACxCE,MAAK,SAAAC,GAAI,OAAI,EAAKpY,SAAS,CAAE+D,SAAUqU,EAAK,GAAGrR,KAClBnH,OAAQwY,EAAK,GAAGrR,KAChB4D,WAAYyN,EAAK,GAAGrR,UAEjDsR,OAAM,SAAAC,GAAK,OAAItR,QAAQC,IAAIqR,Q,+BAGrB,IAAD,OAER,OADiBvY,KAAKR,MAAMgZ,MAApBC,KAeJ,6BACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,6BACE,kBAAC,IAAD,CACEC,OAAK,EAACC,KAAK,IACXxO,OAAQ,SAAC3K,GAAD,OACN,kBAAC,EAAD,iBAAcA,EAAd,CACAK,OAAQ,EAAKJ,MAAMI,aAIvB,kBAAC,IAAD,CACE6Y,OAAK,EAACC,KAAK,YACXxO,OAAQ,SAAC3K,GAAD,OACN,kBAAC,EAAD,iBAAcA,EAAd,CACAK,OAAQ,EAAKJ,MAAMI,OACnBmE,SAAU,EAAKvE,MAAMuE,SACrB4G,WAAY,EAAKnL,MAAMmL,iBAI3B,kBAAC,IAAD,CACE8N,OAAK,EAACC,KAAK,eACXxO,OAAQ,SAAC3K,GAAD,OACN,kBAAC,EAAD,iBAAgBA,EAAhB,CACEK,OAAQ,EAAKJ,MAAMI,aAIzB,kBAAC,IAAD,CACE6Y,OAAK,EAACC,KAAK,aAAaxO,OAAQ,SAAC3K,GAAD,OAC9B,kBAAC,EAAD,iBAAcA,EAAd,CACEK,OAAQ,EAAKJ,MAAMI,OACnBmE,SAAU,EAAKvE,MAAMuE,eAI3B,kBAAC,IAAD,CACE0U,OAAK,EAACC,KAAK,UAAUxO,OAAQ,SAAC3K,GAAD,OAC3B,kBAAC,EAAD,iBAAWA,EAAX,CACEK,OAAQ,EAAKJ,MAAMI,OACnBmE,SAAU,EAAKvE,MAAMuE,kBAtDjC,6BACE,6BACE,kBAAC,EAAD,MACA,8CAEF,6BACE,qD,GAjCMlC,aA6FH8W,cAAUb,GC9FLc,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,OCNNC,IAAS/O,OACP,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEgP,OANSC,4BAOTC,SANWD,mCAOXE,YAAaR,OAAOC,SAASQ,QAC7B,kBAAC,EAAD,QAGJ9J,SAAS+J,eAAe,SD8GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvB,MAAK,SAAAwB,GACJA,EAAaC,gBAEdvB,OAAM,SAAAC,GACLtR,QAAQsR,MAAMA,EAAMuB,a","file":"static/js/main.d4cb67f6.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport '../Stylesheets/RegionDataTable.css'\n\nclass RegionDataTable extends Component {\n  constructor(props) {\n    super(props)\n      this.state = {\n        regionCode: null,\n        regionName: null,\n        chosenMap: null,\n        drinks: null\n      }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    const { drinks, chosenMap, regionCode, regionName } = this.props\n    if(regionCode !== this.state.regionCode) {\n      this.setState({ regionCode, regionName, drinks, chosenMap })\n    }\n  }\n\n  renderClickedCountryHeader() {\n    return(\n      <tr className=\"drinkRegionHeader\">\n          <th>Drinker</th>\n          <th>Drink</th>\n          <th>Drink Type</th>\n          <th>Rating Words</th>\n          <th>Score</th>\n          <th>Brand</th>\n          <th>Company</th>\n      </tr>\n    )\n  }\n\n  renderClickedCountryData() {\n    const selectedDrinks = []\n    const { chosenMap, regionCode, drinks } = this.state\n\n    if(chosenMap === \"world\") {\n      drinks\n      .filter(drink => drink.country === regionCode)\n      .map(drink => selectedDrinks.push(drink))\n    } else if(chosenMap === \"usa\") {\n      drinks\n      .filter(drink => drink.ukUsa === regionCode ||\n                       drink.firstUkUsa === regionCode ||\n                       drink.secondUkUsa === regionCode)\n      .map(drink => selectedDrinks.push(drink))\n    }\n\n    const orderedSelectedDrinks = selectedDrinks.sort((a, b) => (a.name > b.name) ? 1 : -1)\n\n    return orderedSelectedDrinks.map((drink, index) => {\n      if(drink.mixerTwo) {\n        return(\n          <tr key={index}>\n            <td className=\"drinkRegionData\">{drink.name}</td>\n            <td className=\"drinkRegionData\">{drink.drinkMain} with {drink.mixerOne} and {drink.mixerTwo}</td>\n            <td className=\"drinkRegionData\">{drink.drinkType}</td>\n            <td className=\"drinkRegionData\">{drink.ratingWordOne} {drink.ratingWordTwo}</td>\n            <td className=\"drinkRegionData\">{drink.score}</td>\n            <td className=\"drinkRegionData\">{drink.brand}</td>\n            <td className=\"drinkRegionData\">{drink.company}</td>\n          </tr>\n        )\n      } else if(drink.mixerOne) {\n          return(\n          <tr key={index}>\n            <td className=\"drinkRegionData\">{drink.name}</td>\n            <td className=\"drinkRegionData\">{drink.drinkMain} with {drink.mixerOne}</td>\n            <td className=\"drinkRegionData\">{drink.drinkType}</td>\n            <td className=\"drinkRegionData\">{drink.ratingWordOne} {drink.ratingWordTwo}</td>\n            <td className=\"drinkRegionData\">{drink.score}</td>\n            <td className=\"drinkRegionData\">{drink.brand}</td>\n            <td className=\"drinkRegionData\">{drink.company}</td>\n          </tr>\n          )\n      } else {\n          return (\n            <tr key={index}>\n              <td className=\"drinkRegionData\">{drink.name}</td>\n              <td className=\"drinkRegionData\">{drink.drinkMain}</td>\n              <td className=\"drinkRegionData\">{drink.drinkType}</td>\n              <td className=\"drinkRegionData\">{drink.ratingWordOne} {drink.ratingWordTwo}</td>\n              <td className=\"drinkRegionData\">{drink.score}</td>\n              <td className=\"drinkRegionData\">{drink.brand}</td>\n              <td className=\"drinkRegionData\">{drink.company}</td>\n            </tr>\n          )\n      }\n    })\n  }\n\n  render() {\n    const { regionName } = this.state\n    if(!this.state.regionCode) {\n      return <h2 className=\"selectRegionText\">Select a Region for Data</h2>\n    } else {\n      return (\n        <div className=\"selectedCountry\">\n          <table className='selectedCountryTable'>\n            <thead>\n              <tr>\n                <th colSpan=\"7\" className=\"regionRegionHeader\">{regionName}</th>\n              </tr>\n                {this.renderClickedCountryHeader()}\n            </thead>\n            <tbody>\n              {this.renderClickedCountryData()}\n            </tbody>\n          </table>\n        </div>\n      )\n    }\n  }\n}\n\nexport default RegionDataTable;\n\n","import React, { Component } from 'react';\nimport '../Stylesheets/DrinkerDataTable.css';\n\nclass DrinkerDataTable extends Component {\n  constructor(props) {\n    super(props)\n      this.state = {\n        regionCode: null,\n        regionName: null,\n        chosenMap: null,\n        drinks: null,\n        selectedDrinksPerDrinker: []\n      }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    const { drinks, chosenMap, regionCode, regionName } = this.props\n    if(regionCode !== this.state.regionCode) {\n      this.setState({ regionCode, regionName, drinks, chosenMap })\n    }\n  }\n\n  renderClickedDrinkerHeader() {\n    return(\n      <tr className=\"drinkerTableRowHeader\">\n          <th>Drinker</th>\n          <th>Drink Count</th>\n          <th>Avg Score</th>\n      </tr>\n    )\n  }\n\n  renderClickedDrinkerData() {\n    const { chosenMap, regionCode, drinks } = this.state\n    const selectedDrinks = []\n\n    //ESTABLISH SELECTED DRINKS ARRAY\n    if(chosenMap === \"world\") {\n      drinks\n      .filter(drink => drink.country === regionCode)\n      .map(drink => selectedDrinks.push(drink))\n    } else if(chosenMap === \"usa\") {\n      drinks\n      .filter(drink => drink.ukUsa === regionCode ||\n                       drink.firstUkUsa === regionCode ||\n                       drink.secondUkUsa === regionCode)\n      .map(drink => selectedDrinks.push(drink))\n    }\n    //ESTABLISH UNIQUE DRINKERS ARRAY\n    const uniqueDrinkerNames = [...new Set(selectedDrinks.map(drink => drink.name))];\n\n    //ESTABLISH NUMBER OF DRINKS PER PERSON ARRAY AND AVG SCORES ARRAY\n    let drinksPerPerson = []\n    let averageScoresArray = []\n\n    uniqueDrinkerNames.map((name) => {\n      let drinksCounter = 0\n      let drinkerScores = []\n      selectedDrinks.map((drink) => {\n        if(name === drink.name) {\n          drinksCounter++\n          drinkerScores.push(drink.score)\n        }\n      })\n      drinksPerPerson.push(drinksCounter)\n      averageScoresArray.push(drinkerScores)\n    })\n\n    //ESTABLISH DRINKER AVERAGE SCORE\n    const averageScores = averageScoresArray.map((drinkerArray) => {\n      const sum = drinkerArray.reduce((a, b) => a + b, 0)\n      const avg = (sum / drinkerArray.length) || 0;\n      return avg.toFixed(2)\n    })\n\n    //BRING ALL TOGETHER IN AN OBJECT\n    const unorganisedDrinkersData = uniqueDrinkerNames.map((name, index) => {\n      return {\n        name: uniqueDrinkerNames[index],\n        drinksNumber: drinksPerPerson[index],\n        averageScore: averageScores[index]\n      }\n    });\n\n    //ORGANISE THE OBJECTS\n    const finalDrinkersData = unorganisedDrinkersData.sort(function(a,b){return b.averageScore-a.averageScore})\n\n    //RENDER IN TABLE DATA\n    return finalDrinkersData.map((drinkObj, index) => {\n      return(\n        <tr key={index}>\n          <td className=\"drinkDataNameText\">{drinkObj.name}</td>\n          <td className=\"drinkDataNumberText\">{drinkObj.drinksNumber}</td>\n          <td className=\"drinkDataAvgScoreText\">{drinkObj.averageScore}</td>\n        </tr>\n      )\n    })\n  }\n\n  render() {\n    const { regionName } = this.state\n    if(!this.state.regionCode) {\n      return <h2 className=\"selectRegionText\">Select a Region for Drinker Info</h2>\n    } else {\n      return (\n        <div className=\"selectedCountry\">\n          <table className='selectedCountryTable'>\n            <thead>\n              <tr>\n                <th colSpan=\"3\" className=\"drinkerRegionName\">{regionName}</th>\n              </tr>\n                {this.renderClickedDrinkerHeader()}\n            </thead>\n            <tbody>\n              {this.renderClickedDrinkerData()}\n            </tbody>\n          </table>\n        </div>\n      )\n    }\n  }\n}\n\nexport default DrinkerDataTable;","import React, { Component } from 'react';\nimport Navbar from '../Navbar';\nimport { VectorMap } from \"react-jvectormap\";\nimport RegionDataTable from './RegionDataTable';\nimport DrinkerDataTable from './DrinkerDataTable';\nimport '../Stylesheets/WorldMap.css';\nconst { getCode, getName, getData } = require(\"country-list\");\n\nclass WorldMap extends Component {\n  constructor(props) {\n    super(props)\n      this.state = {\n        drinks: null,\n        drinkers: null,\n        worldMapData: null,\n        selectedRegion: null,\n        fullRegionName: null\n      }\n  }\n\n  componentDidMount() {\n    const { drinks } = this.props\n    if(drinks) {\n      this.haveDrinks()\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { drinks } = this.state\n    if(this.props.drinks !== drinks) {\n      this.haveDrinks()\n    }\n  }\n\n  handleRegionClick = (e, stateCode) => {\n    this.refs.map.$mapObject.tip.hide();\n      const fullRegionName = getName(stateCode)\n      this.setState({ selectedRegion: stateCode, fullRegionName })\n  };\n\n  haveDrinks = () => {\n    const { drinks, drinkers } = this.props\n    this.setState({ drinks, drinkers })\n\n    let countryData = []\n\n    drinks\n      .filter(drink => drink.country !== \"Barbados\" && drink.country !== \"-\")\n      .map((drink) => {\n        if(drink.secondCollabCountry) {\n          countryData.push(drink.secondCollabCountry, drink.firstCollabCountry, drink.country)\n        } else if (drink.firstCollabCountry) {\n          countryData.push(drink.firstCollabCountry, drink.country)\n        } else {\n          countryData.push(drink.country)\n        }\n      })\n\n    const countedUniqueCountries = countryData.reduce(function(occ, name) {\n      occ[name] = (occ[name] || 0) + 1;\n      return occ;\n    }, {});\n\n    this.setState({ drinks, drinkers,\n                      worldMapData: countedUniqueCountries,\n    })\n  }\n\n  render() {\n    if(!this.props.drinks) {\n      return(\"Please Wait\")\n    } else {\n      return(\n        <div className=\"totalContainer\">\n          <div className=\"titleAndInput\">\n            <h1 className=\"mainTitle\">World Map</h1>\n            <Navbar />\n          </div>\n          <div className=\"mapAndRegionTable\">\n            <div className=\"map\">\n              <VectorMap\n                map=\"world_mill\"\n                ref={\"map\"}\n                backgroundColor=\"#0077be\" //change it to ocean blue: #0077be\n                zoomOnScroll={false}\n                containerStyle={{\n                  width: \"100%\",\n                  height: \"520px\"\n                }}\n                onRegionClick={this.handleRegionClick} //gets the country code\n                containerClassName=\"map\"\n                regionStyle={{\n                  initial: {\n                    fill: \"#e4e4e4\",\n                    \"fill-opacity\": 0.9,\n                    stroke: \"none\",\n                    \"stroke-width\": 0,\n                    \"stroke-opacity\": 0\n                  },\n                  hover: {\n                    \"fill-opacity\": 0.6,\n                    cursor: 'pointer'\n                  },\n                  selected: {\n                    fill: \"#2938bc\", //color for the clicked country\n                  },\n                  selectedHover: {}\n                }}\n                regionsSelectable={true}\n                series={{\n                  regions: [\n                    {\n                      values: this.state.worldMapData, //this is your data\n                      scale: [\"#146804\"], //your color game's here\n                      normalizeFunction: \"polynomial\"\n                    }\n                  ]\n                }}\n              />\n            </div>\n            <div className=\"regionDataTable\">\n              <RegionDataTable\n                chosenMap=\"world\"\n                drinks={this.state.drinks}\n                regionCode={this.state.selectedRegion}\n                regionName={this.state.fullRegionName}\n              />\n            </div>\n          </div>\n          <div className=\"drinkerDataTable\">\n            <DrinkerDataTable\n              chosenMap=\"world\"\n              drinks={this.state.drinks}\n              regionCode={this.state.selectedRegion}\n              regionName={this.state.fullRegionName}\n            />\n          </div>\n        </div>\n      )\n    }\n  }\n};\n\nexport default WorldMap;","export const USStateList =\n  {\n    \"US-VA\": \"Virginia\",\n    \"US-PA\": \"Pennsylvania\",\n    \"US-TN\": \"Tennessee\",\n    \"US-WV\": \"West Virginia\",\n   \t\"US-NV\": \"Nevada\",\n    \"US-TX\": \"Texas\",\n   \t\"US-NH\": \"New Hampshire\",\n    \"US-NY\": \"New York\",\n    \"US-HI\": \"Hawaii\",\n    \"US-VT\": \"Vermont\",\n    \"US-NM\": \"New Mexico\",\n    \"US-NC\": \"North Carolina\",\n    \"US-ND\": \"North Dakota\",\n    \"US-NE\": \"Nebraska\",\n    \"US-LA\": \"Louisiana\",\n    \"US-SD\": \"South Dakota\",\n    \"US-DC\": \"District of Columbia\",\n    \"US-DE\": \"Delaware\",\n    \"US-FL\": \"Florida\",\n    \"US-CT\": \"Connecticut\",\n    \"US-WA\": \"Washington\",\n    \"US-KS\": \"Kansas\",\n    \"US-WI\": \"Wisconsin\",\n    \"US-OR\": \"Oregon\",\n    \"US-KY\": \"Kentucky\",\n    \"US-ME\": \"Maine\",\n    \"US-OH\": \"Ohio\",\n    \"US-OK\": \"Oklahoma\",\n    \"US-ID\": \"Idaho\",\n    \"US-WY\": \"Wyoming\",\n    \"US-UT\": \"Utah\",\n    \"US-IN\": \"Indiana\",\n    \"US-IL\": \"Illinois\",\n    \"US-AK\": \"Alaska\",\n    \"US-NJ\": \"New Jersey\",\n    \"US-CO\": \"Colorado\",\n    \"US-MD\": \"Maryland\",\n    \"US-MA\": \"Massachusetts\",\n    \"US-AL\": \"Alabama\",\n    \"US-MO\": \"Missouri\",\n    \"US-MN\": \"Minnesota\",\n    \"US-CA\": \"California\",\n    \"US-IA\": \"Iowa\",\n    \"US-MI\": \"Michigan\",\n    \"US-GA\": \"Georgia\",\n    \"US-AZ\": \"Arizona\",\n    \"US-MT\": \"Montana\",\n    \"US-MS\": \"Mississippi\",\n    \"US-SC\": \"South Carolina\",\n    \"US-RI\": \"Rhode Island\",\n    \"US-AR\": \"Arkansas\"\n  }","import React, { Component } from 'react';\nimport Navbar from '../Navbar'\nimport { VectorMap } from \"react-jvectormap\";\nimport RegionDataTable from './RegionDataTable';\nimport DrinkerDataTable from './DrinkerDataTable';\nimport '../Stylesheets/USMap.css';\nimport { USStateList } from './USStateList';\n\nclass USMap extends Component {\n  constructor(props) {\n    super(props)\n      this.state = {\n        drinks: null,\n        drinkers: null,\n        usMapData: null,\n        selectedRegion: null,\n        fullRegionName: null\n      }\n  }\n\n  componentDidMount() {\n    const { drinks } = this.props\n    if(drinks) {\n      this.haveDrinks()\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { drinks } = this.state\n    if(this.props.drinks !== drinks) {\n      this.haveDrinks()\n    }\n  }\n\n  haveDrinks = () => {\n    const { drinks, drinkers } = this.props\n    this.setState({ drinks, drinkers })\n\n    let usStateData = []\n\n    drinks\n    .filter(drink => drink.country === \"US\")\n    .map((drink) => {\n      if(drink.country === \"US\") {\n        usStateData.push(drink.ukUsa)\n      }},\n    )\n    drinks\n    .filter(drink => drink.country === \"US\")\n    .map((drink) => {\n      if(drink.firstCollabCountry === \"US\") {\n        usStateData.push(drink.firstUkUsa)\n      }}\n    )\n    drinks\n    .filter(drink => drink.country === \"US\")\n    .map((drink) => {\n      if(drink.secondCollabCountry === \"US\") {\n        usStateData.push(drink.secondUkUsa)\n      }}\n    )\n\n    const countedUniqueUSStates = usStateData.reduce(function(occ, name) {\n      occ[name] = (occ[name] || 0) + 1;\n      return occ;\n    }, {});\n\n    if(drinks !== this.state.drinks) {\n      this.setState({ drinks, drinkers,\n                      usMapData: countedUniqueUSStates\n                    })\n      }\n  }\n\n  handleRegionClick = (e, stateCode) => {\n    this.refs.map.$mapObject.tip.hide();\n    for (const [selectedRegion, fullRegionName] of Object.entries(USStateList)) {\n      if (stateCode === selectedRegion) {\n        this.setState({ selectedRegion, fullRegionName })\n      }\n    }\n  };\n\n  render() {\n    if(!this.props.drinks) {\n      return(\"Please Wait\")\n    } else {\n      return(\n        <div className=\"totalContainer\">\n          <div className=\"titleAndInput\">\n            <h1 className=\"mainTitle\">US Map</h1>\n            <Navbar />\n          </div>\n          <div className=\"mapAndRegionTable\">\n            <div className=\"map\">\n              <VectorMap\n                map=\"us_aea\"\n                ref={\"map\"}\n                backgroundColor=\"#0077be\" //change it to ocean blue: #0077be\n                zoomOnScroll={false}\n                containerStyle={{\n                  width: \"100%\",\n                  height: \"520px\"\n                }}\n                onRegionClick={this.handleRegionClick} //gets the country code\n                containerClassName=\"map\"\n                regionStyle={{\n                  initial: {\n                    fill: \"#e4e4e4\",\n                    \"fill-opacity\": 0.9,\n                    stroke: \"none\",\n                    \"stroke-width\": 0,\n                    \"stroke-opacity\": 0\n                  },\n                  hover: {\n                    \"fill-opacity\": 0.6,\n                    cursor: 'pointer'\n                  },\n                  selected: {\n                    fill: \"#2938bc\", //color for the clicked country\n                  },\n                  selectedHover: {}\n                }}\n                regionsSelectable={true}\n                series={{\n                  regions: [\n                    {\n                      values: this.state.usMapData, //this is your data\n                      scale: [\"#146804\"], //your color game's here\n                      normalizeFunction: \"polynomial\"\n                    }\n                  ]\n                }}\n              />\n            </div>\n            <div className=\"regionDataTable\">\n              <RegionDataTable\n                chosenMap=\"usa\"\n                drinks={this.state.drinks}\n                regionCode={this.state.selectedRegion}\n                regionName={this.state.fullRegionName}\n              />\n            </div>\n          </div>\n          <div className=\"drinkerDataTable\">\n            <DrinkerDataTable\n              chosenMap=\"usa\"\n              drinks={this.state.drinks}\n              regionCode={this.state.selectedRegion}\n              regionName={this.state.fullRegionName}\n            />\n          </div>\n        </div>\n      )\n    }\n  }\n};\n\nexport default USMap;","import React, { useEffect, useState } from \"react\";\nimport './Stylesheets/Navbar.css';\nimport WorldMap from './MapFolder/WorldMap';\nimport USMap from './MapFolder/USMap';\nimport { NavLink } from \"react-router-dom\";\nimport axios from \"axios\";\nconst DRINKS_URL = \"http://localhost:5000/drinks\";\nconst DRINKERS_URL = \"http://localhost:5000/peopleNames\";\n\nconst Navbar = () => {\n  const [isOpen, setOpen] = useState(false);\n  const [drinkData, setDrinkData] = useState({drinks: [], isFetching: false});\n  const [drinkerData, setDrinkerData] = useState({drinkers: [], isFetching: false});\n\n  useEffect(() => {\n    const fetchDrinks = async () => {\n        try {\n            setDrinkData({drinks: drinkData.drinks, isFetching: true});\n            const response = await axios.get(DRINKS_URL);\n            setDrinkData({drinks: response.data, isFetching: false});\n        } catch (e) {\n            console.log(e);\n            setDrinkData({drinks: drinkData.drinks, isFetching: false});\n        }\n    };\n    fetchDrinks();\n  }, []);\n\n  useEffect(() => {\n    const fetchDrinkers = async () => {\n        try {\n            setDrinkerData({drinkers: drinkerData.drinkers, isFetching: true});\n            const response = await axios.get(DRINKERS_URL);\n            setDrinkerData({drinkers: response.data, isFetching: false});\n        } catch (e) {\n            console.log(e);\n            setDrinkerData({drinkers: drinkerData.drinkers, isFetching: false});\n        }\n    };\n    fetchDrinkers();\n  }, []);\n\n  return (\n  \t<nav\n      className=\"navbar is-primary\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"nav-container\">\n        <div className={`navbar-menu ${isOpen && \"is-active\"}`}>\n          <div className=\"navbar-start\">\n            <NavLink\n              className=\"navbar-item\"\n              activeClassName=\"is-active\"\n              to=\"/\"\n            >\n              Main Table\n            </NavLink>\n\n            <NavLink\n              className=\"navbar-item\"\n              activeClassName=\"is-active\"\n              to=\"/drinkers\"\n            >\n              Drinkers\n            </NavLink>\n\n            <NavLink\n              className=\"navbar-item\"\n              activeClassName=\"is-active\"\n              to=\"/ratingwords\"\n            >\n              Rating Words\n            </NavLink>\n\n            <NavLink\n              className=\"navbar-item\"\n              activeClassName=\"is-active\"\n              to=\"/world-map\"\n            >\n              World Map\n            </NavLink>\n\n            <NavLink\n              className=\"navbar-item\"\n              activeClassName=\"is-active\"\n              to=\"/us-map\"\n            >\n              USA Map\n            </NavLink>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n };\n\n\n  export default Navbar;","import React, { useState } from \"react\";\nimport { useTable, useFilters, useSortBy, usePagination, useBlockLayout } from \"react-table\";\nimport './Stylesheets/Table.css'\n\nexport default function Table({ columns, data }) {\n\n  const [filterInput, setFilterInput] = useState(\"\");\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    gotoPage,\n    nextPage,\n    previousPage,\n    pageOptions,\n    pageCount,\n    canPreviousPage,\n    canNextPage,\n    setPageSize,\n    prepareRow,\n    setFilter,\n    state: { pageIndex, pageSize }\n  } = useTable({\n    columns,\n    data,\n    initialState: { pageSize: 50 }\n  },\n    useFilters,\n    useSortBy,\n    usePagination,\n    useBlockLayout\n  );\n\n  const handleFilterChange = e => {\n    const value = e.target.value || undefined;\n    setFilter(\"drinkMain\", value);\n    setFilterInput(value);\n  };\n\n  const tableIfPages = () => {\n    if(pageCount === 0) {\n      return <h1>No Data!</h1>\n    } else {\n    return (<table {...getTableProps()} className=\"table\">\n          <thead>\n          {headerGroups.map(headerGroup => (\n              <tr {...headerGroup.getHeaderGroupProps()} className=\"th\">\n                {headerGroup.headers.map(column => (\n                  <th\n                    {...column.getHeaderProps(column.getSortByToggleProps())}\n                    className={\n                      column.isSorted\n                        ? column.isSortedDesc\n                          ? \"sort-desc\"\n                          : \"sort-asc\"\n                        : \"initial-column\"\n                    }\n                  >\n                    {column.render(\"Header\")}\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()}>\n            {page.map((row, i) => {\n              prepareRow(row);\n              return (\n                <tr {...row.getRowProps()} className=\"tr\">\n                  {row.cells.map(cell => {\n                    return <td {...cell.getCellProps()} className=\"td\">\n                      {cell.render(\"Cell\")}</td>;\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n    )\n      }\n    }\n\n  if(!data.length) {\n    return <h1>HOLD YOUR HORSES ONE SEC...</h1>\n  } else {\n    return (\n      <div className=\"fullTableAndSearch\">\n        <div className=\"drinkSearchDiv\">\n          <p className=\"drinkSearchPtag\">Search for a Drink:{' '}\n            <input\n            value={filterInput}\n            onChange={handleFilterChange}\n            placeholder={\"Search Drink Name\"}\n            />\n          </p>\n        </div>\n        <div className=\"pagination\">\n          <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n            {'<<'}\n          </button>{' '}\n          <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n            {'<'}\n          </button>{' '}\n          <button onClick={() => nextPage()} disabled={!canNextPage}>\n            {'>'}\n          </button>{' '}\n          <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\n            {'>>'}\n          </button>{' '}\n          <span>\n            Page{' '}\n            <strong>\n              {pageIndex + 1} of {pageOptions.length}\n            </strong>{' '}\n          </span>\n          <select\n            value={pageSize}\n            onChange={e => {\n              setPageSize(Number(e.target.value))\n            }}\n          >\n            {[50, 75, 100, 150, 200].map(pageSize => (\n              <option key={pageSize} value={pageSize}>\n                Show {pageSize}\n              </option>\n            ))}\n          </select>\n        </div>\n        {tableIfPages()}\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Container, Col, Form, FormGroup, Label, Input, Button, Row } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport './Stylesheets/AddDrinkForm.css';\n\nconst initialState = {\n  showForm: false,\n  peopleNames: [],\n  drinkTypes:[],\n  personName: '',\n  mainDrink: '',\n  drinkType: '',\n  brandBrewery: '',\n  abv: '',\n  hasMixer: false,\n  mixerOne: '',\n  mixerTwo: '',\n  ratingWordOne: '',\n  ratingWordTwo: '',\n  score: '',\n  hasCollab: false,\n  collabOne: '',\n  collabTwo: '',\n  company: '',\n  notes: '',\n  filteredOptions: [],\n  showMainOptions: false,\n  showBrandOptions: false,\n  userInput: ''\n}\n\nclass AddDrinkForm extends Component {\n\n  static propTypes = {\n    options: PropTypes.instanceOf(Array).isRequired\n  };\n\n  constructor(props) {\n    super(props)\n    this.state = initialState;\n  };\n\n  componentDidMount() {\n    let drinkersArray = []\n    axios(\"http://localhost:5000/peoplenames\")\n      .then(data => {\n        drinkersArray = data.data.map((drinker) => {\n          return drinker\n      });\n      this.setState({ peopleNames: drinkersArray })\n      }).catch(error => {\n        console.log(error);\n      });\n\n      let drinkTypesArray = []\n      axios(\"http://localhost:5000/drinktypes\")\n        .then(data => {\n          drinkTypesArray = data.data.map((drinkType) => {\n            return drinkType\n        });\n        this.setState({ drinkTypes: drinkTypesArray })\n        }).catch(error => {\n          console.log(error);\n        });\n  }\n\n  toggleAddFormClass = () => {\n    const currentState = this.state.showForm;\n    this.setState({ showForm: !currentState });\n  };\n\n  handleFormChangeandBrandAutocomplete = (event) => {\n    const { target: { name, value } } = event\n    this.setState({ [name]: value })\n    const { options } = this.props;\n    const userInput = event.currentTarget.value;\n    const nonUniquefilteredOptions = options.filter(\n      (option) => option.brand.toLowerCase().indexOf(userInput.toLowerCase()) > -1);\n    const filteredOptions = [...new Set(nonUniquefilteredOptions.map(\n      (option) => (option.brand)))];\n    this.setState({\n      filteredOptions,\n      showBrandOptions: true,\n      userInput\n    });\n  }\n\n  handleFormChangeandMainComponentAutocomplete = (event) => {\n    const { target: { name, value } } = event\n    this.setState({ [name]: value })\n    const { options } = this.props;\n    const userInput = event.currentTarget.value;\n    const nonUniquefilteredOptions = options.filter(\n      (option) => option.drinkMain.toLowerCase().indexOf(userInput.toLowerCase()) > -1);\n    const filteredOptions = [...new Set(nonUniquefilteredOptions.map(\n      (option) => (option)\n      ))];\n    this.setState({\n      filteredOptions,\n      showMainOptions: true,\n      userInput\n    });\n  }\n\n  onAutocompleteMainClick = (e) => {\n    this.setState({\n      filteredOption: [],\n      showMainOptions: false,\n      userInput: e.drinkMain,\n      mainDrink: e.drinkMain,\n      brandBrewery: e.brand,\n      abv: e.abv*100,\n      company: e.company\n    });\n    if(e.mixerOne) {\n      this.setState({ hasMixer: true, mixerOne: e.mixerOne, mixerTwo: e.mixerTwo })\n    } else {\n      this.setState({ hasMixer: false, mixerOne: '', mixerTwo: '' })\n    }\n    if(e.collabOne) {\n      this.setState({ hasCollab: true, collabOne: e.collabOne, collabTwo: e.collabTwo })\n    } else {\n      this.setState({ hasCollab: false, collabOne: '', collabTwo: '' })\n    }\n  };\n\n  onAutocompleteBrandClick = (e) => {\n    this.setState({\n      filteredOption: [],\n      showBrandOptions: false,\n      userInput: e.currentTarget.innerText,\n      brandBrewery: e.currentTarget.innerText\n    });\n  };\n\n  handleFormChange = (event) => {\n    const { target: { name, value } } = event\n    this.setState({ [name]: value })\n  }\n\n  toggleHasMixer = () => {\n    const currentState = this.state.hasMixer;\n    this.setState({ hasMixer: !currentState, mixerOne: '', mixerTwo: ''  });\n  };\n\n  toggleHasCollab = () => {\n    const currentState = this.state.hasCollab;\n    this.setState({ hasCollab: !currentState, collabOne: '', collabTwo: '' });\n  };\n\n  validate = (event) => {\n    let nam = event.target.name;\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const isValid = this.validate();\n    if (isValid) {\n    }\n  }\n\n  render() {\n    const drinkerNames = this.state.peopleNames;\n    const drinkTypes = this.state.drinkTypes\n    const drinkerNameSelect = drinkerNames.map((name) =>\n      <option key={name.drinker} value={name.drinker}>{name.drinker}</option>\n    );\n    const drinkTypeSelect = drinkTypes.map((drinkType) =>\n      <option key={drinkType.drinkType} value={drinkType.drinkType}>{drinkType.drinkType}</option>\n    )\n\n    const { state: { filteredOptions, showMainOptions, showBrandOptions, userInput }} = this;\n\n    let brandOptionList;\n    let mainOptionList;\n\n    if (showMainOptions && userInput) {\n      if (filteredOptions.length) {\n        mainOptionList = (\n          <ul className=\"options\">\n            {filteredOptions.map((optionChoice, index) => {\n              let className;\n              if(!optionChoice.mixerOne) {\n                return (\n                  <li className={className} key={index} onClick={() => this.onAutocompleteMainClick(optionChoice)}>\n                    <p>{optionChoice.drinkMain}</p>\n                  </li>\n                )\n              } else if(!optionChoice.mixerTwo) {\n                return (\n                  <li className={className} key={index} onClick={() => this.onAutocompleteMainClick(optionChoice)}>\n                    <p>{optionChoice.drinkMain} WITH <span className=\"mixerOneAutocompleteLine\">{optionChoice.mixerOne}</span></p>\n                  </li>\n                )\n              } else {\n                return (\n                  <li className={className} key={index} onClick={() => this.onAutocompleteMainClick(optionChoice)}>\n                    <p>{optionChoice.drinkMain} WITH {optionChoice.mixerOne} AND {optionChoice.mixerTwo}</p>\n                  </li>\n                )\n              }\n            })}\n          </ul>\n        );\n      }\n    }\n\n    if (showBrandOptions && userInput) {\n      if (filteredOptions.length) {\n        brandOptionList = (\n          <ul className=\"options\">\n            {filteredOptions.map((optionName, index) => {\n              let className;\n              return (\n                <li className={className} key={index} onClick={this.onAutocompleteBrandClick}>\n                  {optionName}\n                </li>\n              );\n            })}\n          </ul>\n        );\n      }\n    }\n    return (\n      <div>\n        <div className=\"buttonDiv\">\n          <button className=\"addButton\" onClick={this.toggleAddFormClass} >Add Drink</button>\n        </div>\n          <div className=\"addFormContainer\">\n            <Container className={this.state.showForm ?\n              'shownAddDrinkForm': 'hiddenAddDrinkForm'}>\n              <Form className=\"addDrinkForm\" onSubmit={this.handleSubmit}>\n                <Row className=\"addDrinkTitle\">\n                  <div>\n                    <p>Drink Details:</p>\n                  </div>\n                </Row>\n                <Row xs=\"3\">\n                  <Col>\n                    <FormGroup className=\"formGroupQuestion\">\n                      <Label className=\"questionLabel\">Person Name</Label>\n                      <Input\n                        type=\"select\"\n                        name=\"personName\"\n                        id=\"personNameInput\"\n                        value={this.personName}\n                        onChange={this.handleFormChange}\n                        className=\"questionInputTopRow\"\n                      >\n                      <option className=\"placeholder\" value=\"\">Select Drinker:</option>\n                      {drinkerNameSelect}\n                      </Input>\n                    </FormGroup>\n                  </Col>\n                  <Col>\n                    <FormGroup className=\"formGroupQuestion\">\n                      <Label className=\"questionLabel\">Drink Type</Label>\n                      <Input\n                        type=\"select\"\n                        name=\"drinkType\"\n                        id=\"drinkTypeInput\"\n                        value={this.drinkType}\n                        onChange={this.handleFormChange}\n                        className=\"questionInputTopRow\"\n                        >\n                        <option className=\"placeholder\" value=\"\">Select Drink Type:</option>\n                        {drinkTypeSelect}\n                      </Input>\n                    </FormGroup>\n                  </Col>\n                  <Col>\n                  <FormGroup className=\"formGroupQuestion\">\n                          <Label className=\"questionLabel\">Main Drink Component</Label>\n                          <Input\n                            type=\"text\"\n                            name=\"mainDrink\"\n                            id=\"mainDrinkComponentInput\"\n                            placeholder=\"Main Drink Component\"\n                            value={this.state.mainDrink}\n                            onKeyDown={this.browseOrSelectOptions}\n                            onChange={this.handleFormChangeandMainComponentAutocomplete}\n                            className=\"questionInputSecondRow\"\n                          />\n                        </FormGroup>\n                  </Col>\n                  {mainOptionList}\n                </Row>\n                {this.state.personName && this.state.drinkType && this.state.mainDrink &&\n                  <>\n                    <Row xs=\"3\">\n                      <Col>\n                        <FormGroup className=\"formGroupQuestion\">\n                      <Label className=\"questionLabel\">Brand or Brewery</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"brandBrewery\"\n                        id=\"brandNameInput\"\n                        placeholder=\"Brand or Brewery Name\"\n                        value={this.state.brandBrewery}\n                        onKeyDown={this.browseOrSelectOptions}\n                        onChange={this.handleFormChangeandBrandAutocomplete}\n                        className=\"questionInputTopRow\"\n                      />\n                    </FormGroup>\n                      </Col>\n                      {brandOptionList}\n                      <Col xs=\"2\">\n                        <FormGroup className=\"formGroupQuestion\">\n                          <Label className=\"questionLabel\">ABV(%)</Label>\n                          <Input\n                            type=\"number\"\n                            name=\"abv\"\n                            id=\"abvInput\"\n                            placeholder=\"Drink ABV(%)\"\n                            value={this.state.abv}\n                            onChange={this.handleFormChange}\n                            className=\"questionInputSecondRow\"\n                          />\n                        </FormGroup>\n                      </Col>\n                      <Col xs=\"4.5\" className=\"questionInputCheckboxes\">\n                        <FormGroup className=\"mixerCheck\">\n                          <Label check>\n                          <Input type=\"checkbox\"\n                                 name=\"hasMixer\"\n                                 onChange={this.toggleHasMixer}\n                                 checked={this.state.hasMixer}\n                                />\n                          Mixer(s)?\n                          </Label>\n                        </FormGroup>\n                        <FormGroup check className=\"collabCheck\">\n                            <Label check>\n                            <Input type=\"checkbox\"\n                                  onChange={this.toggleHasCollab}\n                                  className=\"questionInput\"\n                                  checked={this.state.hasCollab}\n                                  />\n                            Collabaratory Brewery(s)?\n                            </Label>\n                          </FormGroup>\n                      </Col>\n                    </Row>\n                    <Row xs=\"4\">\n                      {this.state.hasMixer &&\n                      <>\n                        <Col xs=\"3\">\n                          <FormGroup>\n                            <div className=\"mixerQuestion\">\n                            <Label className=\"questionLabel\">Mixer One</Label>\n                            <Input\n                              type=\"text\"\n                              name=\"mixerOne\"\n                              id=\"mixerOneInput\"\n                              placeholder=\"Mixer One\"\n                              value={this.state.mixerOne}\n                              onChange={this.handleFormChange}\n                              className=\"questionInput\"/>\n                              </div>\n                          </FormGroup>\n                        </Col>\n                        <Col xs=\"3\">\n                          <FormGroup>\n                            <div className=\"mixerQuestion\">\n                              <Label className=\"questionLabel\">Mixer Two</Label>\n                              <Input\n                                type=\"text\"\n                                name=\"mixerTwo\"\n                                id=\"mixerTwoInput\"\n                                placeholder=\"Mixer Two (optional)\"\n                                value={this.state.mixerTwo}\n                                onChange={this.handleFormChange}\n                                className=\"questionInput\"/>\n                            </div>\n                          </FormGroup>\n                        </Col>\n                      </>\n                      }\n                    </Row>\n                    <Row xs=\"4\">\n                        {this.state.hasCollab &&\n                        <>\n                        <Col>\n                          <FormGroup>\n                            <div className=\"collabQuestion\">\n                              <Label className=\"questionLabel\">Collabaratory Brewery One</Label>\n                              <Input\n                                type=\"text\"\n                                name=\"collabOne\"\n                                id=\"collabOneInput\"\n                                placeholder=\"First Collab\"\n                                value={this.state.collabOne}\n                                onChange={this.handleFormChange}\n                                className=\"questionInput\"\n                              />\n                            </div>\n                          </FormGroup>\n                        </Col>\n                        <Col>\n                          <FormGroup>\n                            <div className=\"collabQuestion\">\n                              <Label className=\"questionLabel\">Collabaratory Brewery Two</Label>\n                              <Input\n                                type=\"text\"\n                                name=\"collabTwo\"\n                                id=\"collabTwoInput\"\n                                placeholder=\"Second Collab (optional)\"\n                                value={this.state.collabTwo}\n                                onChange={this.handleFormChange}\n                                className=\"questionInput\"\n                              />\n                            </div>\n                          </FormGroup>\n                        </Col>\n                        </>\n                        }\n                    </Row>\n                    <Row xs=\"3\">\n                      <Col>\n                        <FormGroup className=\"formGroupQuestion\">\n                          <Label className=\"questionLabel\">Rating Word One</Label>\n                          <Input\n                            type=\"text\"\n                            name=\"ratingWordOne\"\n                            id=\"ratingWordOneInput\"\n                            placeholder=\"Rating Word One\"\n                            value={this.state.ratingWordOne}\n                            onChange={this.handleFormChange}\n                            className=\"questionInputThirdRow\"\n                          />\n                        </FormGroup>\n                      </Col>\n                      <Col>\n                        <FormGroup className=\"formGroupQuestion\">\n                          <Label className=\"questionLabel\">Rating Word Two</Label>\n                          <Input\n                            type=\"text\"\n                            name=\"ratingWordTwo\"\n                            id=\"ratingWordTwoInput\"\n                            placeholder=\"Rating Word Two\"\n                            value={this.state.ratingWordTwo}\n                            onChange={this.handleFormChange}\n                            className=\"questionInputThirdRow\"\n                          />\n                        </FormGroup>\n                      </Col>\n                      <Col>\n                        <FormGroup className=\"formGroupQuestion\">\n                          <Label className=\"questionLabel\">Score</Label>\n                          <Input\n                            type=\"number\"\n                            name=\"score\"\n                            id=\"scoreInput\"\n                            placeholder=\"Score\"\n                            value={this.state.score}\n                            onChange={this.handleFormChange}\n                            className=\"questionInputThirdRow\"\n                          />\n                        </FormGroup>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col xs=\"4\">\n                        <FormGroup className=\"formGroupQuestion\">\n                          <Label className=\"questionLabel\">Company</Label>\n                          <Input\n                            type=\"text\"\n                            name=\"company\"\n                            id=\"companyInput\"\n                            placeholder=\"Main Component Company\"\n                            value={this.state.company}\n                            onChange={this.handleFormChange}\n                            className=\"questionInputBottomRow\"\n                          />\n                        </FormGroup>\n                      </Col>\n                      <Col xs=\"6\">\n                        <FormGroup className=\"formGroupQuestion\">\n                          <Label className=\"questionLabel\">Notes</Label>\n                          <Input\n                            type=\"textarea\"\n                            name=\"notes\"\n                            id=\"notesInput\"\n                            placeholder=\"Drink notes here\"\n                            value={this.state.notes}\n                            onChange={this.handleFormChange}\n                            className=\"questionInputBottomRow\"\n                          />\n                        </FormGroup>\n                      </Col>\n                    </Row>\n                    <div className=\"text-center\">\n                      <Button className=\"submitButton\">Submit Drink</Button>\n                    </div>\n                  </>\n                }\n              </Form>\n            </Container>\n          </div>\n      </div>\n    )\n  }\n}\n\nexport default AddDrinkForm;","import React, { useState, useEffect, useMemo } from 'react';\nimport Navbar from './Navbar';\nimport './Stylesheets/HomePage.css';\nimport Table from './Table';\nimport AddDrinkForm from './AddDrinkForm';\n\nconst Dates = ( values ) => {\n  for (const [key, date] of Object.entries(values)) {\n    const newDate = new Date(date)\n    const month = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n    return +newDate.getDate() + \" \" + (month[newDate.getMonth()]) + \" \" + newDate.getFullYear().toString().substr(-2)\n  }\n}\n\nfunction HomePage(props) {\n\n  const [data, setData] = useState(props.drinks);\n\n  useEffect(() => {\n    (async () => {\n      setData(props.drinks)\n    })();\n  }, [props]);\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"All Drinks\",\n        columns: [\n          {\n            Header: \"Name\",\n            accessor: \"name\",\n            width: \"120\",\n          },\n          {\n            Header: \"Date\",\n            accessor: \"date\",\n            width: \"70\",\n            Cell: ({ cell: { value } }) => <Dates values={value} />\n          },\n          {\n            Header: \"Main Component\",\n            accessor: \"drinkMain\",\n            width: \"250\"\n          },\n          {\n            Header: \"Drink Type\",\n            accessor: \"drinkType\",\n            width: \"70\"\n          },\n          {\n            Header: \"ABV%\",\n            accessor: \"abv\",\n            width: \"50\",\n            Cell: ({ cell: { value } }) => parseFloat((value * 100).toFixed(1)) + '%'\n          },\n          {\n            Header: \"Brand or Brewery\",\n            accessor: \"brand\",\n            width: \"120\"\n          },\n          {\n            Header: \"Other Component(s) and/or Mixer(s)\",\n            accessor: d => (d.mixerSix ?\n                           `${d.mixerOne}, ${d.mixerTwo}, ${d.mixerThree}, ${d.mixerFour}, ${d.mixerFive}, ${d.mixerSix}`:\n                            d.mixerFive ?\n                           `${d.mixerOne}, ${d.mixerTwo}, ${d.mixerThree}, ${d.mixerFour}, ${d.mixerFive}`:\n                            d.mixerFour ?\n                           `${d.mixerOne}, ${d.mixerTwo}, ${d.mixerThree}, ${d.mixerFour}`:\n                            d.mixerThree ?\n                           `${d.mixerOne}, ${d.mixerTwo}, ${d.mixerThree}`:\n                            d.mixerTwo ?\n                           `${d.mixerOne}, ${d.mixerTwo}`:\n                            d.mixerOne ?\n                           `${d.mixerOne}` : \"\")\n          },\n          {\n            Header: \"Rating Words\",\n            accessor: d => `${d.ratingWordOne}, ${d.ratingWordTwo}`,\n            width: \"150\"\n          },\n          {\n            Header: \"Score\",\n            accessor: \"score\",\n            width: \"60\",\n          },\n          {\n            Header: \"Collaborator(s)\",\n            width: \"120\",\n            accessor: d => (d.secondCollabCompany ?\n              `${d.firstCollabCompany}, ${d.secondCollabCompany}`:\n               d.firstCollabCompany ?\n              `${d.firstCollabCompany}`: \"\")\n          },\n          {\n            Header: \"Company\",\n            accessor: \"company\",\n            width: \"130\"\n          },\n          {\n            Header: \"Notes\",\n            accessor: \"notes\"\n          },\n        ]\n      }\n    ],\n    []\n  );\n  if(!data) {\n    return <h1>Hold Your Horses One Sec...</h1>\n  } else {\n  return (\n    <div>\n      <div>\n        <h1 className=\"mainTitle\">Welcome to Drink And Rate!!!</h1>\n        <Navbar />\n        {/* <AddDrinkForm options={data}/> */}\n      </div>\n      <div className=\"App\">\n        <Table columns={columns} data={data} />\n      </div>\n    </div>\n    )\n  }\n}\n\n  export default HomePage;\n","import React, { Component } from 'react';\nimport Navbar from './Navbar'\nimport './Stylesheets/RatingWord.css';\nimport { Pie, Bar } from 'react-chartjs-2';\nimport 'chartjs-plugin-labels'\n\nclass RatingWord extends Component {\n  constructor(props) {\n    super(props)\n      this.state = {\n        drinks: null,\n        ratingWordOne: [],\n        ratingWordTwo: [],\n        allRatingWords: [],\n        sortedUniqueWords: null,\n        wordSearch: null,\n        clickedWord: '',\n        clickedName: '',\n        clickedWordDrinks: '',\n        wordPieChartData: null,\n        whoSaidIt: null,\n        chartTypePie: true,\n        chartTypeBar: false\n    }\n  }\n\n  componentDidMount() {\n    const { drinks } = this.props\n    this.setState({ drinks })\n    }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { drinks } = this.state\n\n    if(prevState.drinks !== this.props.drinks) {\n      this.setState({ drinks: this.props.drinks })\n\n      let allWords = []\n\n      const setUpWordArray = () => {\n        if(drinks){\n          this.state.drinks.map((drink) => {\n            allWords.push(drink.ratingWordOne)\n            allWords.push(drink.ratingWordTwo)\n          })\n          setAllWordsState()\n        }\n      }\n\n      const setAllWordsState = () => {\n        this.setState({ allRatingWords: allWords })\n        const countedUniqueWords = allWords.reduce(function(occ, word) {\n          occ[word] = (occ[word] || 0) + 1;\n          return occ;\n        }, {});\n        const sortedUniqueWords = [];\n        for(const word in countedUniqueWords) {\n          sortedUniqueWords.push([word, countedUniqueWords[word]]);\n        }\n        sortedUniqueWords.sort(function(a, b) {\n          return b[1] - a[1];\n        });\n        this.setState({ sortedUniqueWords: sortedUniqueWords })\n        }\n\n      setUpWordArray()\n    }\n  }\n\n  renderWordHeader() {\n    return (\n    <tr>\n      <th>Rating Word</th>\n      <th>Times Used</th>\n    </tr>\n    )\n  }\n\n  renderWordData() {\n    if(!this.state.sortedUniqueWords) {\n      return (\n        <tr>\n          <td>LOADING...</td>\n        </tr>\n      )\n    } else {\n      return this.state.sortedUniqueWords\n      .filter((word) => {\n        if(this.state.wordSearch === null)\n            return word\n        else if(word[0].toLowerCase().includes(this.state.wordSearch.toLowerCase())){\n            return word\n        }})\n      .map((word, index) => {\n        return (\n          <tr key={index} onClick={() => this.setChartData(word[0])}>\n            <td className=\"ratingWord\">{word[0]}</td>\n            <td className=\"ratingWord\">{word[1]}</td>\n          </tr>\n        )\n      })\n    }\n  }\n\n  searchWord=(event) => {\n    let enteredLetters = event.target.value;\n    this.setState({ wordSearch: enteredLetters})\n  }\n\n  handleChartChange = () => {\n    const currentStatePie = this.state.chartTypePie;\n    const currentStateBar = this.state.chartTypeBar;\n    this.setState({ chartTypePie: !currentStatePie,\n                    chartTypeBar: !currentStateBar });\n  }\n\n  setChartData(clickedWord) {\n    this.setState({ clickedWord, clickedName: '' })\n    const whoSaidIt = [];\n    const clickedWordDrinks = [];\n    this.state.drinks.map((drinkInfo, index) => {\n      if(drinkInfo.ratingWordOne == clickedWord ||\n        drinkInfo.ratingWordTwo == clickedWord) {\n          whoSaidIt.push(drinkInfo.name)\n          clickedWordDrinks.push(drinkInfo)\n        }\n      })\n    this.setState({ clickedWordDrinks })\n    const countedUniqueDrinkers = whoSaidIt.reduce(function(occ, name) {\n      occ[name] = (occ[name] || 0) + 1;\n      return occ;\n    }, {});\n    const useableDrinkerData = [];\n    for(const name in countedUniqueDrinkers) {\n      useableDrinkerData.push([name, countedUniqueDrinkers[name]]);\n    }\n\n    function sortByWordFrequency(a, b) {\n      if (a[1] < b[1]) return 1;\n      if (a[1] > b[1]) return -1;\n      return 0;\n    }\n\n    const sortedDrinkerData = useableDrinkerData.sort(sortByWordFrequency)\n\n    const drinkerNames = []\n    sortedDrinkerData.map((drinkInfo) => {\n      drinkerNames.push(drinkInfo[0])\n    })\n\n    const chartData = {\n      labels: drinkerNames,\n      datasets: [{\n        label: `${clickedWord}`,\n        data: [],\n        backgroundColor: [\n          '#e6194b', '#3cb44b', '#ffe119', '#4363d8', '#f58231', '#911eb4',\n          '#46f0f0', '#f032e6', '#bcf60c', '#fabebe', '#008080', '#e6beff',\n          '#9a6324', '#fffac8', '#800000', '#aaffc3', '#808000', '#ffd8b1',\n          '#000075', '#808080', '#ffffff'\n        ],\n        borderWidth: 1,\n        borderColor: [\n          '#008080', '#008080', '#008080', '#008080', '#008080', '#008080',\n          '#008080', '#008080', '#008080', '#008080', '#008080', '#008080',\n          '#008080', '#008080', '#008080', '#008080', '#008080', '#008080',\n          '#008080', '#008080', '#008080'\n        ],\n        hoverBorderWidth: 4,\n        hoverBackgroundColor: [\n          '#36A2EB', '#36A2EB', '#36A2EB', '#36A2EB', '#36A2EB', '#36A2EB',\n          '#36A2EB', '#36A2EB', '#36A2EB', '#36A2EB', '#36A2EB', '#36A2EB',\n          '#36A2EB', '#36A2EB', '#36A2EB', '#36A2EB', '#36A2EB', '#36A2EB',\n          '#36A2EB', '#36A2EB', '#36A2EB'\n        ]\n      }]\n    };\n\n    sortedDrinkerData.map((drinkInfo) => {\n      chartData.datasets[0].data.push(drinkInfo[1])\n    })\n    this.setState({ wordPieChartData: chartData })\n  }\n\n  renderClickedWordsDrinksHeader() {\n    const { clickedWordDrinks, clickedWord, clickedName } = this.state\n    if(!clickedName) {\n      return(\n        <tr>\n          <th>{clickedWordDrinks.length} Drink(s) called \"{clickedWord}\"</th>\n        </tr>\n      )\n    } else {\n      let numOfDrinks = 0;\n      clickedWordDrinks.map((drink) => {\n        if(drink.name === clickedName) {\n          numOfDrinks = numOfDrinks + 1\n        }\n      })\n      return (\n      <tr>\n        <th>{clickedName} has used \"{clickedWord}\" for {numOfDrinks} drink(s).</th>\n      </tr>\n      )\n    }\n  }\n\n  resetDrinkerName() {\n    this.setState({ clickedName: '' })\n    this.renderClickedWordDrinks()\n  }\n\n  renderClickedWordDrinks() {\n    const { clickedWord, clickedWordDrinks, clickedName } = this.state\n    if(!clickedWord) {\n      return(\"No Data\")\n    } else if(!clickedName) {\n        return clickedWordDrinks.map((drink, index) => {\n          if(drink.mixerTwo) {\n            return(\n              <tr key={drink._id}>\n                <td>\n                {index + 1}) <span className=\"drinkerNameClickedWordTable\">{drink.name}'s</span>\n                <span className=\"drinkNameInTable\"> {drink.drinkMain} with {drink.mixerOne} and {drink.mixerTwo}</span> -\n                <span className=\"ratingWordsInTable\">{drink.ratingWordOne}, {drink.ratingWordTwo}</span> -\n                <span className=\"scoreInTable\">{drink.score}/10</span>.\n                </td>\n              </tr>\n            )\n          } else if(drink.mixerOne) {\n              return(\n                <tr key={drink._id}>\n                  <td>\n                  {index + 1}) <span className=\"drinkerNameClickedWordTable\">{drink.name}'s</span>\n                  <span className=\"drinkNameInTable\"> {drink.drinkMain} with {drink.mixerOne}</span> -\n                  <span className=\"ratingWordsInTable\">{drink.ratingWordOne}, {drink.ratingWordTwo}</span> -\n                  <span className=\"scoreInTable\"> {drink.score}/10</span>.\n                  </td>\n                </tr>\n              )\n          } else {\n              return(\n                <tr key={drink._id}>\n                  <td>\n                    {index + 1}) <span className=\"drinkerNameClickedWordTable\">{drink.name}'s</span>\n                    <span className=\"drinkNameInTable\"> {drink.drinkMain}</span> -\n                    <span className=\"ratingWordsInTable\">{drink.ratingWordOne}, {drink.ratingWordTwo}</span> -\n                    <span className=\"scoreInTable\"> {drink.score}/10</span>.\n                  </td>\n                </tr>\n              )\n          }\n        })\n    } else {\n        return clickedWordDrinks.map((drink, index) => {\n          if(drink.mixerTwo && drink.name === clickedName) {\n            return(\n              <tr key={drink._id}>\n                <td>\n                  {index + 1}) <span className=\"drinkNameInTable\">{drink.drinkMain} with {drink.mixerOne} and {drink.mixerTwo}</span> -\n                  <span className=\"ratingWordsInTable\"> {drink.ratingWordOne}, {drink.ratingWordTwo}</span> -\n                  <span className=\"scoreInTable\"> {drink.score}/10</span>.\n                </td>\n              </tr>\n            )\n          } else if(drink.mixerOne && drink.name === clickedName) {\n              return(\n                <tr key={drink._id}>\n                  <td>\n                    {index + 1}) <span className=\"drinkNameInTable\">{drink.drinkMain} with {drink.mixerOne}</span> -\n                    <span className=\"ratingWordsInTable\"> {drink.ratingWordOne}, {drink.ratingWordTwo}</span> -\n                    <span className=\"scoreInTable\"> {drink.score}/10</span>.\n                  </td>\n                </tr>\n              )\n          } else if(drink.name === clickedName) {\n              return(\n                <tr key={drink._id}>\n                  <td>\n                    {index + 1}) <span className=\"drinkNameInTable\">{drink.drinkMain}</span> -\n                    <span className=\"ratingWordsInTable\"> {drink.ratingWordOne}, {drink.ratingWordTwo}</span> -\n                    <span className=\"scoreInTable\"> {drink.score}/10</span>.\n                  </td>\n                </tr>\n              )\n          }\n        })\n    }\n  }\n\n  renderClickedWordData() {\n    if(!this.state.clickedWord) {\n      return(\n        <div className=\"noWordDiv\">\n          <p>Click A Rating Word For Info!</p>\n          <p>←←←←←</p>\n        </div>\n      )\n    } else {\n      document.body.scrollTop = 0;\n      document.documentElement.scrollTop = 0;\n      return(\n        <div>\n          <select\n            className=\"chartTypeSelect\"\n            value={this.chartTypePie}\n            onChange={this.handleChartChange}\n            >\n            <option>Pie Chart</option>\n            <option>Bar Chart</option>\n          </select>\n          <div className={this.state.chartTypePie ?\n              'showPieChart': 'hidePieChart'}>\n            <Pie\n              data={this.state.wordPieChartData}\n              width={150}\n              height={100}\n              onElementsClick={element => {\n                this.setState({ clickedName: this.state.wordPieChartData.labels[element[0]._index] })\n                this.renderClickedWordDrinks(this.state.wordPieChartData.labels[element[0]._index])\n                }}\n              options={{\n                events: ['mousemove'],\n                onHover: (event, chartElement) => {\n                  event.target.style.cursor = chartElement[0] ? 'pointer' : 'default'\n                },\n                title: {\n                  display: true,\n                  text: `Who said ${this.state.clickedWord}? (Total - ${this.state.clickedWordDrinks.length})`,\n                  fontSize: 25\n                },\n                legend: {\n                  position: \"bottom\"\n                },\n                plugins: {\n                  labels: {\n                    render: function (args) {\n                      return `${args.label} ` + `(${args.value})`\n                    },\n                    fontColor: \"black\",\n                    fontSize: 16,\n                    position: \"outside\",\n                    textMargin: 6\n                  }\n                }\n              }}\n            />\n          </div>\n          <div className={this.state.chartTypeBar ?\n              'showBarChart': 'hideBarChart'}>\n            <Bar\n              data={this.state.wordPieChartData}\n              width={120}\n              height={70}\n              onElementsClick={element => {\n                this.setState({ clickedName: this.state.wordPieChartData.labels[element[0]._index] })\n                this.renderClickedWordDrinks(this.state.wordPieChartData.labels[element[0]._index])\n                }}\n              options={{\n                events: ['mousemove'],\n                onHover: (event, chartElement) => {\n                  event.target.style.cursor = chartElement[0] ? 'pointer' : 'default'\n                },\n                title: {\n                  display: true,\n                  text: `Who said ${this.state.clickedWord}? (Total - ${this.state.clickedWordDrinks.length})`,\n                  fontSize: 25\n                },\n                scales: {\n                  yAxes: [{\n                      ticks: {\n                          beginAtZero: true,\n                          stepSize: 1\n                      }\n                  }]\n                },\n                plugins: {\n                    labels: false\n                }\n              }}\n            />\n          </div>\n        </div>\n      )\n    }\n  }\n\n  render() {\n    console.log(this.state.drinks)\n    if(!this.state.drinks) {\n      return <h1>One Moment Please</h1>\n    } else {\n      return (\n        <div className=\"fullPage\">\n          <div className=\"titleDiv\">\n            {(!this.state.clickedWord ?\n              <h1 className='title'>Rating Word Data Page</h1> :\n              <h1 className='title'\n              >Info on \"<span className=\"titleClickedWord\">{this.state.clickedWord}</span>\"</h1>\n            )}\n          </div>\n          <Navbar />\n          <div className=\"underTitle\">\n            <div className =\"searchAndTable\">\n              <p className=\"searchLabel\">Search for a Rating Word below!</p>\n              <p className=\"searchLabel\">↓↓↓↓↓</p>\n              <input className=\"wordSearchInput\" type=\"text\" placeholder=\"Enter item to be searched\" onChange={(e)=>this.searchWord(e)} />\n              <table className=\"drinksTable\">\n                <thead>\n                  {this.renderWordHeader()}\n                </thead>\n                <tbody>\n                  {this.renderWordData()}\n                </tbody>\n              </table>\n            </div>\n            <div className=\"chart\">\n              <div className=\"selectedWordData\">\n                {this.renderClickedWordData()}\n              </div>\n            </div>\n            <div className=\"clickedWordDrinksTable\">\n              <table className=\"clickedWordTable\">\n                <thead>\n                  {this.renderClickedWordsDrinksHeader()}\n                </thead>\n                <tbody>\n                  {this.renderClickedWordDrinks()}\n                </tbody>\n                {(this.state.clickedName ?\n                  <button onClick={() => this.resetDrinkerName()}>Click to Reset Drinkers</button> :\n                  \"\")}\n              </table>\n            </div>\n          </div>\n        </div>\n      )\n    }\n  }\n}\n\nexport default RatingWord;","import React, { Component } from 'react';\nimport { Radar, Bar } from 'react-chartjs-2';\nimport 'chartjs-plugin-labels'\nimport '../Stylesheets/RadarChart.css'\n\nclass RadarChart extends Component {\n  constructor(props) {\n    super(props)\n      this.state = {\n        drinks: null,\n        drinkers: null,\n        drinkTypes: null,\n        selectedDrinker: 'All Drinkers',\n        drinkerRadarData: null,\n        showRadar: true,\n        showBar: false,\n        radarColor: [\"rgb(250, 222, 229)\"],\n        barColor: ['#e6194b', '#3cb44b', '#ffe119', '#4363d8', '#f58231', '#911eb4',\n        '#46f0f0', '#f032e6', '#bcf60c', '#fabebe', '#008080', '#e6beff']\n      }\n  }\n\n  componentDidMount() {\n    const { drinks } = this.props\n    if(drinks) {\n      this.haveDrinks()\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const currentPropDrinks = this.props.drinks\n    const currentPropDrinkers = this.props.drinkers\n    const currentPropDrinkTypes = this.props.drinkTypes\n    const currentSelectedDrinker = this.props.selectedDrinker\n    if(currentPropDrinks !== this.state.drinks) {\n      this.setState({ drinks: currentPropDrinks,\n                      drinkers: currentPropDrinkers,\n                      drinkTypes: currentPropDrinkTypes,\n                      selectedDrinker: currentSelectedDrinker\n                    })\n    }\n\n    if(prevState.selectedDrinker !== currentSelectedDrinker ||\n       prevState.showRadar !== this.state.showRadar) {\n       this.haveDrinks()\n    }\n  }\n\n  haveDrinks = () => {\n    // SET STATE WITH DRINKS AND DRINKERS\n    const { drinks, drinkers, drinkTypes, selectedDrinker } = this.props\n    this.setState({ drinks, drinkers, drinkTypes, selectedDrinker })\n    const { radarColor, barColor } = this.state\n\n    // PREP DRINK TYPE LABELS AND DRINK TYPE DRINK ARRAY\n    let allDrinkTypes = []\n    let drinkTypeCount = []\n\n    drinkTypes.map((typeObj) => {\n      allDrinkTypes.push(typeObj.drinkType)\n      let drinksFromDrinkType = []\n      drinks.map((drinkObj) => {\n        if(selectedDrinker === \"All Drinkers\" && drinkObj.drinkType === typeObj.drinkType) {\n          drinksFromDrinkType.push(drinkObj)\n        } else if(drinkObj.drinkType === typeObj.drinkType && selectedDrinker === drinkObj.name) {\n          drinksFromDrinkType.push(drinkObj)\n        }\n      })\n      drinkTypeCount.push(drinksFromDrinkType)\n    })\n\n    // GET NUMBER OF DRINKS PER TYPE\n    let drinkCountPerType = []\n    drinkTypeCount.map((array) => {\n      drinkCountPerType.push(array.length)\n    })\n\n    // SET RADAR DATA\n    const drinkerRadarData = {\n      labels: allDrinkTypes,\n        datasets: [{\n          label: this.state.selectedDrinker,\n          data: drinkCountPerType,\n          backgroundColor: this.state.showRadar ? radarColor: barColor,\n          borderColor: 'rgb(238, 97, 131)'\n        }],\n    }\n    this.setState({ drinkerRadarData })\n\n  }\n\n  handleChartChange = () => {\n    const currentStateRadar = this.state.showRadar;\n    const currentStateBar = this.state.showBar;\n    this.setState({ showRadar: !currentStateRadar,\n                    showBar: !currentStateBar });\n  }\n\n  renderDrinkerChart() {\n    if(!this.state.drinks) {\n      return <p>Wait for Data</p>\n    } else {\n      return(\n        <div>\n          {/* <div> */}\n            <select\n              className=\"chartTypeSelect\"\n              value={this.showRadar}\n              onChange={this.handleChartChange}\n              >\n              <option>Radar Chart</option>\n              <option>Bar Chart</option>\n            </select>\n\n            <div className={this.state.showRadar ?\n              'shownRadarChart': 'hiddenRadarChart'}>\n              <Radar\n                data={this.state.drinkerRadarData}\n                width={75}\n                height={75}\n                options={{\n                  title: {\n                    display: true,\n                    text: `${this.state.selectedDrinker}`,\n                    fontSize: 25\n                  },\n                  scale: {\n                    ticks: {\n                      z: 1,\n                      callback: function (value) { if (Number.isInteger(value)) { return value; } else { return \"\"} }\n                    },\n                    pointLabels: {\n                      fontSize: 15\n                    }\n                  },\n                  legend: {\n                    position: \"bottom\",\n                    labels: {\n                      fontSize: 15\n                    }\n                  }\n                }}\n              />\n              </div>\n              <div className={this.state.showBar ?\n                'shownBarChart': 'hiddenBarChart'}>\n                <Bar\n                  data={this.state.drinkerRadarData}\n                  width={120}\n                  height={85}\n                  options={{\n                    plugins: {\n                      labels: {\n                        render: function (args) {\n                          return `${args.value}`\n                        }\n                      }\n                    },\n                    layout: {\n                      padding: {\n                        top: 15\n                      }\n                    },\n                    legend: {\n                      position: \"bottom\"\n                    }\n                  }}\n                />\n            </div>\n          {/* </div> */}\n        </div>\n      )\n    }\n  }\n\n  render(){\n    return(\n      <div>\n        {this.renderDrinkerChart()}\n      </div>\n    )\n  }\n}\n\nexport default RadarChart;","import { controllers } from 'chart.js';\nimport React, { Component } from 'react';\nimport '../Stylesheets/DrinkersTable.css';\n\nclass DrinkersTable extends Component {\n  constructor(props) {\n    super(props)\n      this.state = {\n        drinks: null,\n        drinkers: null,\n        drinkTypes: null,\n        selectedDrinker: 'All Drinkers',\n        regularDrinkers: null,\n        irregularDrinkers: null,\n        drinkerObjectsArray: null,\n        sort: {\n          column: null,\n          direction: 'desc',\n        },\n      }\n    }\n\n    componentDidMount() {\n      const { drinks, drinkers, drinkTypes, selectedDrinker, regularDrinkers, irregularDrinkers } = this.props\n      this.setState({ drinks, drinkers, drinkTypes, selectedDrinker, regularDrinkers, irregularDrinkers })\n    }\n\n    componentDidUpdate() {\n      this.setDrinkerData()\n    }\n\n    renderDrinkerHeader() {\n      return(\n        <tr>\n          <th className=\"drinkerTableHeader\" onClick={e => this.onSort(\"drinkerName\")}>Name</th>\n          <th className=\"drinkerTableHeader\" onClick={e => this.onSort(\"drinksNum\")}>Number of Drinks</th>\n          <th className=\"drinkerTableHeader\" onClick={e => this.onSort(\"drinkerWeeks\")}>Weeks Participated</th>\n          <th className=\"drinkerTableHeader\" onClick={e => this.onSort(\"drinkerAvgConsume\")}>Avg Drinks Per Visit</th>\n          <th className=\"drinkerTableHeader\" onClick={e => this.onSort(\"drinkerAvgStrength\")}>Avg Drink Strength</th>\n          <th className=\"drinkerTableHeader\" onClick={e => this.onSort(\"drinkerFaveType\")}>Favourite Drink Type</th>\n          <th className=\"drinkerTableHeader\" onClick={e => this.onSort(\"drinkerHighScore\")}>Highest Ever Score</th>\n          <th className=\"drinkerTableHeader\" onClick={e => this.onSort(\"drinkerLowScore\")}>Lowest Ever Score</th>\n          <th className=\"drinkerTableHeader\" onClick={e => this.onSort(\"drinkerAvgScore\")}>Average Score</th>\n          <th className=\"drinkerTableHeader\" onClick={e => this.onSort(\"drinkerDrinkPercentage\")}>Percent of All Drinks Drunk</th>\n        </tr>\n      )\n    }\n\n    setDrinkerData() {\n      if(!this.state.drinks) {\n        return \"Please Wait\"\n      } else {\n\n        const { drinks, drinkers } = this.state\n        let allDrinkersArrays = []\n        let drinkerObjectsArray = []\n\n        //ESTABLISH ARRAY OF ARRAYS OF DRINKERS\n        drinkers.map((drinker) => {\n          let oneDrinkerArray = []\n          drinks.map((drink) => {\n            if(drink.name === drinker.drinker) {\n              oneDrinkerArray.push(drink)\n            }\n          })\n          allDrinkersArrays.push(oneDrinkerArray)\n        })\n\n        //SET UP DRINKER OBJECTS\n          allDrinkersArrays.map((aDrinkArray) => {\n            // GET DRINKER NAME\n            const drinkerName = aDrinkArray\n            .map(drink => drink.name)\n            .filter((value, index, self) => self.indexOf(value) === index)\n\n            // GET NUMBER OF DRINKS\n            const numOfDrinks = aDrinkArray.length\n\n            // GET WEEKS PARTICIPATED\n            let allDrinksDates = []\n            aDrinkArray.map((drink) => {\n              const drinkDate = new Date(drink.date)\n              const date = +drinkDate.getDate() + \"/\" + drinkDate.getMonth() + \"/\" + drinkDate.getFullYear()\n              allDrinksDates.push(date)\n            })\n            const weeksParticipated =  new Set(allDrinksDates).size\n\n            // GET AVERAGE DRINK CONSUMED\n            const drinksAvg = (numOfDrinks / weeksParticipated).toFixed(2)\n\n            // GET AVERAGE DRINK STRENGTH\n            let allDrinkStrengths = []\n            aDrinkArray.map((drink) => {\n              allDrinkStrengths.push(drink.abv)\n              if(drink.abv === undefined) {\n                console.log(drink.drinkMain)\n              }\n            })\n            const sumOfAbvs = allDrinkStrengths.reduce((a, b) => a + b, 0);\n            const averageDrinkStrength = ((sumOfAbvs / allDrinkStrengths.length)*100).toFixed(2) + '%' || 0;\n\n            // GET FAVOURITE DRINK TYPE\n            let allDrinkerDrinkTypes = []\n            aDrinkArray.map((drink) => allDrinkerDrinkTypes.push(drink.drinkType))\n            let frequency = {};\n            let maxType = 0;\n            let favouriteDrinkType;\n            for(let type in allDrinkerDrinkTypes) {\n              frequency[allDrinkerDrinkTypes[type]]=(frequency[allDrinkerDrinkTypes[type]] || 0)+1; // increment frequency.\n              if(frequency[allDrinkerDrinkTypes[type]] > maxType) { // is this frequency > max so far ?\n                maxType = frequency[allDrinkerDrinkTypes[type]];  // update max.\n                favouriteDrinkType = allDrinkerDrinkTypes[type];          // update result.\n              }\n            }\n            // GET HIGHEST/LOWEST/AVERAGE SCORE\n            let allDrinkerScores = []\n            aDrinkArray.map((drink) => allDrinkerScores.push(drink.score))\n            const highestScore = Math.max(...allDrinkerScores)\n            const lowestScore = Math.min(...allDrinkerScores)\n            const averageScoreFunc = allDrinkerScores => allDrinkerScores.reduce(\n              (prevScore, currScore) => prevScore + currScore, 0 ) / allDrinkerScores.length;\n            const averageScore = (averageScoreFunc(allDrinkerScores)).toFixed(2)\n\n            // GET % OF TOTAL DRINKS DRUNK\n            const percentOfTotal = ((aDrinkArray.length / drinks.length) * 100).toFixed(2) + '%'\n\n            const drinkerObject = {\n              drinkerName: drinkerName[0],\n              drinksNum: numOfDrinks,\n              drinkerWeeks: weeksParticipated,\n              drinkerAvgConsume: drinksAvg,\n              drinkerAvgStrength: averageDrinkStrength,\n              drinkerFaveType: favouriteDrinkType,\n              drinkerHighScore: highestScore,\n              drinkerLowScore: lowestScore,\n              drinkerAvgScore: averageScore,\n              drinkerDrinkPercentage: percentOfTotal\n            }\n            drinkerObjectsArray.push(drinkerObject)\n          })\n        if(!this.state.drinkerObjectsArray) {\n          this.setState({ drinkerObjectsArray })\n        }\n      }\n    }\n\n    renderDrinkerData() {\n      const { drinks, drinkerObjectsArray } = this.state\n\n        // ESTABLISH TOTAL WEEKS SO FAR FOR LATER DATE COMPARISON\n        let totalWeeks = []\n        drinks.map((drink) => {\n          const thisDrinkDate = new Date(drink.date)\n          const oneDrinkDate =  +thisDrinkDate.getDate() + \"/\" + thisDrinkDate.getMonth() + \"/\" + thisDrinkDate.getFullYear()\n          totalWeeks.push(oneDrinkDate)\n        })\n        const totalWeeksNumber =  new Set(totalWeeks).size\n\n        // RETURN DATA TABLE INFO!\n        return drinkerObjectsArray.map((dataObject, index) => {\n          return(\n            <tr key={index}>\n              <td>{dataObject.drinkerName}</td>\n              <td>{dataObject.drinksNum}</td>\n              <td>{dataObject.drinkerWeeks} / {totalWeeksNumber} ({parseFloat(dataObject.drinkerWeeks/totalWeeksNumber*100).toFixed(0)}%)</td>\n              <td>{dataObject.drinkerAvgConsume}</td>\n              <td>{dataObject.drinkerAvgStrength}</td>\n              <td>{dataObject.drinkerFaveType}</td>\n              <td>{dataObject.drinkerHighScore}</td>\n              <td>{dataObject.drinkerLowScore}</td>\n              <td>{dataObject.drinkerAvgScore}</td>\n              <td>{dataObject.drinkerDrinkPercentage}</td>\n            </tr>\n          )\n        })\n    }\n\n    onSort(column){\n      const direction = this.state.sort.column ? (this.state.sort.direction === 'asc' ? 'desc' : 'asc') : 'desc';\n\n      // SORT DATA BY PERSON NAME\n      const sortedNameData = () => {\n        const dataSortedByName = this.state.drinkerObjectsArray.sort((a, b) => {\n          const firstText = a.drinkerName.toUpperCase();\n          const secondText = b.drinkerName.toUpperCase();\n          if (firstText < secondText) return -1;\n          else if (firstText > secondText) return 1;\n          return 0;\n        });\n        if (direction === 'desc') dataSortedByName.reverse();\n        this.setState({ drinkerObjectsArray: dataSortedByName,\n                        sort: { column, direction }\n                      });\n      }\n\n      // SORT DATA BY DRINK TYPE\n      const sortedDrinkTypeData = () => {\n        const dataSortedByDrinkType = this.state.drinkerObjectsArray.sort((a, b) => {\n          const firstText = a.drinkerFaveType.toUpperCase();\n          const secondText = b.drinkerFaveType.toUpperCase();\n          if (firstText < secondText) return -1;\n          else if (firstText > secondText) return 1;\n          return 0;\n        });\n        if (direction === 'desc') dataSortedByDrinkType.reverse();\n        this.setState({ drinkerObjectsArray: dataSortedByDrinkType,\n                        sort: { column, direction }\n                      });\n      }\n\n      const sortedNumberColumn = () => {\n        const dataSortedByNumbers = this.state.drinkerObjectsArray.sort((a, b) => {\n          const firstNum = parseFloat(a[column])\n          const secondNum = parseFloat(b[column])\n          if (firstNum < secondNum) return -1;\n          else if (firstNum > secondNum) return 1;\n          return 0;\n        })\n        if (direction === 'desc') dataSortedByNumbers.reverse();\n        this.setState({ drinkerObjectsArray: dataSortedByNumbers,\n                        sort: { column, direction }\n                      });\n      }\n\n      if(column === \"drinkerName\") {\n        sortedNameData()\n      } else if(column === \"drinkerFaveType\") {\n        sortedDrinkTypeData()\n      } else {\n        sortedNumberColumn()\n      }\n    }\n\n  render() {\n    const { drinkerObjectsArray } = this.state\n    if (!drinkerObjectsArray) {\n      return <p>Awaiting Data</p>\n    } else {\n      return(\n        <div>\n          <table className=\"drinkersTable\">\n            <thead>\n              {this.renderDrinkerHeader()}\n            </thead>\n            <tbody>\n              {this.renderDrinkerData()}\n            </tbody>\n          </table>\n        </div>\n      )\n    }\n  }\n}\n\nexport default DrinkersTable;","import React, { Component } from 'react';\nimport RadarChart from './RadarChart';\nimport DrinkersTable from './DrinkersTable';\nimport Navbar from '../Navbar.js'\nimport '../Stylesheets/Drinkers.css'\n\nclass Drinkers extends Component {\n  constructor(props) {\n    super(props)\n      this.state = {\n        drinks: null,\n        drinkers: null,\n        drinkTypes: null,\n        selectedDrinker: \"All Drinkers\",\n        drinksPerPerson: null,\n        regularDrinkers: [],\n        irregularDrinkers: [],\n      }\n  }\n\n  componentDidMount() {\n    const { drinks } = this.props\n    if(drinks) {\n      this.haveDrinks()\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { drinks } = this.state\n    if(this.props.drinks !== drinks) {\n      this.haveDrinks()\n    }\n  }\n\n  haveDrinks = () => {\n    // SET STATE WITH DRINKS AND DRINKERS\n    const { drinks, drinkers, drinkTypes } = this.props\n    this.setState({ drinks, drinkers, drinkTypes })\n\n    // SET STATE - DRINKS PER PERSON\n    const drinksPerPerson = drinks.reduce( (acc, o) => (acc[o.name] = (acc[o.name] || 0)+1, acc), {} );\n    this.setState({ drinksPerPerson })\n\n    //SET STATE - REGULAR / IRREGULAR DRINKERS\n    let regularDrinkers = []\n    let irregularDrinkers = []\n    for (const [person, drinkNum] of Object.entries(drinksPerPerson)) {\n      if (drinkNum >= 20) {\n        regularDrinkers.push(person)\n      } else {\n        irregularDrinkers.push(person)\n      }\n    }\n    regularDrinkers.sort(function (a, b) {\n      return a.localeCompare(b);\n    });\n    irregularDrinkers.sort(function (a, b) {\n      return a.localeCompare(b);\n    });\n    this.setState({ regularDrinkers, irregularDrinkers })\n}\n\n  regularDrinkers() {\n    const { regularDrinkers } = this.state\n      return regularDrinkers.map((drinker, index) => {\n        return <option key={index} value={drinker}>{drinker}</option>\n      })\n  }\n\n  irregularDrinkers() {\n    const { irregularDrinkers } = this.state\n      return irregularDrinkers.map((drinker, index) => {\n        return <option key={index} value={drinker}>{drinker}</option>\n      })\n  }\n\n  onSelectDrinker (event) {\n    this.setState({ selectedDrinker: event.target.value });\n  }\n\n  render() {\n    if(!this.state.drinks) {\n      return(\"Please Wait\")\n    } else {\n      return(\n      <div className=\"drinkersContainer\">\n        <h1 className=\"drinkersPageTitle\">Drinkers Page</h1>\n        <Navbar />\n        <select\n          className=\"drinkerSelect\"\n          onChange={this.onSelectDrinker.bind(this)}\n          value={this.state.selectedDrinker}\n        >\n          <option value=\"All Drinkers\">ALL DRINKERS</option>\n          <optgroup label=\"Regular Attendees\">\n            {this.regularDrinkers()}\n          </optgroup>\n          <optgroup label=\"Irregular Attendees\">\n            {this.irregularDrinkers()}\n          </optgroup>\n        </select>\n        <div className=\"chartsAndTable\">\n          <div className=\"radarAndBarChart\">\n            <RadarChart drinks={this.state.drinks}\n                        drinkers={this.state.drinkers}\n                        drinkTypes={this.state.drinkTypes}\n                        selectedDrinker={this.state.selectedDrinker} />\n          </div>\n          <div className=\"drinkersTable\">\n            <DrinkersTable drinks={this.state.drinks}\n                        drinkers={this.state.drinkers}\n                        drinkTypes={this.state.drinkTypes}\n                        selectedDrinker={this.state.selectedDrinker}\n                        regularDrinkers={this.state.regularDrinkers}\n                        irregularDrinkers={this.state.irregularDrinkers}/>\n          </div>\n        </div>\n      </div>\n\n      )\n    }\n  }\n}\n  export default Drinkers;","import React from 'react'\nimport { useAuth0 } from '@auth0/auth0-react';\n\nconst LoginButton = () => {\n  const { loginWithRedirect } = useAuth0();\n  return(\n    <button onClick={() => loginWithRedirect()}>\n      Login\n    </button>\n  )\n}\n\nexport default LoginButton;","import React from 'react'\nimport { useAuth0 } from '@auth0/auth0-react';\n\nconst LogoutButton = () => {\n  const { logout } = useAuth0();\n  return(\n    <button onClick={() => logout()}>\n      Logout\n    </button>\n  )\n}\n\nexport default LogoutButton;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport HomePage from './HomePage';\nimport RatingWord from './RatingWord';\nimport Drinkers from './DrinkerFolder/Drinkers';\nimport WorldMap from './MapFolder/WorldMap';\nimport USMap from './MapFolder/USMap';\nimport './Stylesheets/App.css';\nimport LoginButton from './AuthFolder/LoginButton';\nimport LogoutButton from './AuthFolder/LogoutButton';\nimport { withAuth0 } from '@auth0/auth0-react';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n      this.state = {\n        drinks: null,\n        drinkers: null,\n        drinkTypes: null\n      }\n  }\n\n  componentDidMount() {\n    const requestDrinkers = axios.get(\"http://localhost:5000/peoplenames\")\n    const requestDrinks = axios.get(\"http://localhost:5000/drinks\")\n    const requestDrinkTypes = axios.get(\"http://localhost:5000/drinktypes\")\n    axios.all([requestDrinkers, requestDrinks, requestDrinkTypes])\n      .then(resp => this.setState({ drinkers: resp[0].data,\n                                    drinks: resp[1].data,\n                                    drinkTypes: resp[2].data\n                                  }))\n      .catch(error => console.log(error))\n  }\n\n  render () {\n    const { user } = this.props.auth0;\n    if(!user) {\n      return (\n        <div>\n          <div>\n            <LoginButton />\n            <p>Please sign in</p>\n          </div>\n          <div>\n            <button>Add Drinker</button>\n          </div>\n        </div>\n      )\n    } else {\n      return (\n        <div>\n          <LogoutButton />\n          <BrowserRouter>\n            <div>\n              <Route\n                exact path=\"/\"\n                render={(props) => (\n                  <HomePage {...props}\n                  drinks={this.state.drinks}\n                  />\n                )}\n              />\n              <Route\n                exact path=\"/drinkers\"\n                render={(props) => (\n                  <Drinkers {...props}\n                  drinks={this.state.drinks}\n                  drinkers={this.state.drinkers}\n                  drinkTypes={this.state.drinkTypes}\n                  />\n                )}\n              />\n              <Route\n                exact path=\"/ratingwords\"\n                render={(props) => (\n                  <RatingWord {...props}\n                    drinks={this.state.drinks}\n                  />\n                )}\n              />\n              <Route\n                exact path=\"/world-map\" render={(props) => (\n                  <WorldMap {...props}\n                    drinks={this.state.drinks}\n                    drinkers={this.state.drinkers}\n                  />\n                )}\n              />\n              <Route\n                exact path=\"/us-map\" render={(props) => (\n                  <USMap {...props}\n                    drinks={this.state.drinks}\n                    drinkers={this.state.drinkers}\n                  />\n                )}\n              />\n            </div>\n          </BrowserRouter>\n        </div>\n      )\n    }\n  }\n}\n\nexport default withAuth0(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Stylesheets/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Auth0Provider } from '@auth0/auth0-react'\n\nconst domain = process.env.REACT_APP_AUTH0_DOMAIN;\nconst clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\n\nReactDOM.render(\n  <BrowserRouter>\n    <Auth0Provider\n      domain={domain}\n      clientId={clientId}\n      redirectUri={window.location.origin}>\n      <App />\n    </Auth0Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}